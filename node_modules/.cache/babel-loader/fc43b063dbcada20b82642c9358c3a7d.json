{"ast":null,"code":"import { createStyles } from '@mantine/styles';\n\nfunction getVariantStyles(theme, {\n  variant,\n  radius\n}) {\n  const borderColor = theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[3];\n  const filledColor = theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.colors.gray[0];\n  const borderRadius = theme.fn.radius(radius);\n\n  if (variant === \"default\") {\n    return {\n      color: theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.black,\n      borderBottom: `1px solid ${borderColor}`\n    };\n  }\n\n  if (variant === \"contained\") {\n    return {\n      border: `1px solid ${borderColor}`,\n      transition: \"background-color 150ms ease\",\n      \"&[data-active]\": {\n        backgroundColor: filledColor\n      },\n      \"&:first-of-type\": {\n        borderTopRightRadius: borderRadius,\n        borderTopLeftRadius: borderRadius,\n        \"& > [data-accordion-control]\": {\n          borderTopRightRadius: borderRadius,\n          borderTopLeftRadius: borderRadius\n        }\n      },\n      \"&:last-of-type\": {\n        borderBottomRightRadius: borderRadius,\n        borderBottomLeftRadius: borderRadius,\n        \"& > [data-accordion-control]\": {\n          borderBottomRightRadius: borderRadius,\n          borderBottomLeftRadius: borderRadius\n        }\n      },\n      \"& + &\": {\n        borderTop: 0\n      }\n    };\n  }\n\n  if (variant === \"filled\") {\n    return {\n      borderRadius,\n      \"&[data-active]\": {\n        backgroundColor: filledColor\n      }\n    };\n  }\n\n  if (variant === \"separated\") {\n    return {\n      borderRadius,\n      backgroundColor: filledColor,\n      border: \"1px solid transparent\",\n      transition: \"background-color 150ms ease\",\n      \"& + &\": {\n        marginTop: theme.spacing.md\n      },\n      \"&[data-active]\": {\n        backgroundColor: theme.colorScheme === \"dark\" ? theme.colors.dark[7] : theme.white,\n        borderColor\n      }\n    };\n  }\n\n  return {};\n}\n\nvar useStyles = createStyles((theme, params) => ({\n  item: getVariantStyles(theme, params)\n}));\nexport default useStyles;","map":{"version":3,"sources":["../../../src/Accordion/AccordionItem/AccordionItem.styles.ts"],"names":[],"mappings":";;AACA,SAAS,gBAAT,CAA0B,KAA1B,EAAiC;AAAE,EAAA,OAAF;AAAW,EAAA;AAAX,CAAjC,EAAsD;AACpD,QAAM,WAAW,GAAG,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA1E;AACA,QAAM,WAAW,GAAG,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA1E;AACA,QAAM,YAAY,GAAG,KAAK,CAAC,EAAN,CAAS,MAAT,CAAgB,MAAhB,CAArB;;AACA,MAAI,OAAO,KAAK,SAAhB,EAA2B;AACzB,WAAO;AACL,MAAA,KAAK,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC,KAD9D;AAEL,MAAA,YAAY,EAAG,aAAY,WAAY;AAFlC,KAAP;AAID;;AACD,MAAI,OAAO,KAAK,WAAhB,EAA6B;AAC3B,WAAO;AACL,MAAA,MAAM,EAAG,aAAY,WAAY,EAD5B;AAEL,MAAA,UAAU,EAAE,6BAFP;AAGL,wBAAkB;AAChB,QAAA,eAAe,EAAE;AADD,OAHb;AAML,yBAAmB;AACjB,QAAA,oBAAoB,EAAE,YADL;AAEjB,QAAA,mBAAmB,EAAE,YAFJ;AAGjB,wCAAgC;AAC9B,UAAA,oBAAoB,EAAE,YADQ;AAE9B,UAAA,mBAAmB,EAAE;AAFS;AAHf,OANd;AAcL,wBAAkB;AAChB,QAAA,uBAAuB,EAAE,YADT;AAEhB,QAAA,sBAAsB,EAAE,YAFR;AAGhB,wCAAgC;AAC9B,UAAA,uBAAuB,EAAE,YADK;AAE9B,UAAA,sBAAsB,EAAE;AAFM;AAHhB,OAdb;AAsBL,eAAS;AACP,QAAA,SAAS,EAAE;AADJ;AAtBJ,KAAP;AA0BD;;AACD,MAAI,OAAO,KAAK,QAAhB,EAA0B;AACxB,WAAO;AACL,MAAA,YADK;AAEL,wBAAkB;AAChB,QAAA,eAAe,EAAE;AADD;AAFb,KAAP;AAMD;;AACD,MAAI,OAAO,KAAK,WAAhB,EAA6B;AAC3B,WAAO;AACL,MAAA,YADK;AAEL,MAAA,eAAe,EAAE,WAFZ;AAGL,MAAA,MAAM,EAAE,uBAHH;AAIL,MAAA,UAAU,EAAE,6BAJP;AAKL,eAAS;AACP,QAAA,SAAS,EAAE,KAAK,CAAC,OAAN,CAAc;AADlB,OALJ;AAQL,wBAAkB;AAChB,QAAA,eAAe,EAAE,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC,KAD7D;AAEhB,QAAA;AAFgB;AARb,KAAP;AAaD;;AACD,SAAO,EAAP;AACD;;AACD,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,EAAQ,MAAR,MAAoB;AAC9C,EAAA,IAAI,EAAE,gBAAgB,CAAC,KAAD,EAAQ,MAAR;AADwB,CAApB,CAAD,CAA3B","sourcesContent":["import { createStyles, CSSObject, MantineTheme } from '@mantine/styles';\nimport { AccordionStylesParams } from '../Accordion.types';\n\nfunction getVariantStyles(\n  theme: MantineTheme,\n  { variant, radius }: AccordionStylesParams\n): CSSObject {\n  const borderColor = theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[3];\n  const filledColor = theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.colors.gray[0];\n  const borderRadius = theme.fn.radius(radius);\n\n  if (variant === 'default') {\n    return {\n      color: theme.colorScheme === 'dark' ? theme.colors.dark[0] : theme.black,\n      borderBottom: `1px solid ${borderColor}`,\n    };\n  }\n\n  if (variant === 'contained') {\n    return {\n      border: `1px solid ${borderColor}`,\n      transition: 'background-color 150ms ease',\n\n      '&[data-active]': {\n        backgroundColor: filledColor,\n      },\n\n      '&:first-of-type': {\n        borderTopRightRadius: borderRadius,\n        borderTopLeftRadius: borderRadius,\n\n        '& > [data-accordion-control]': {\n          borderTopRightRadius: borderRadius,\n          borderTopLeftRadius: borderRadius,\n        },\n      },\n\n      '&:last-of-type': {\n        borderBottomRightRadius: borderRadius,\n        borderBottomLeftRadius: borderRadius,\n\n        '& > [data-accordion-control]': {\n          borderBottomRightRadius: borderRadius,\n          borderBottomLeftRadius: borderRadius,\n        },\n      },\n\n      '& + &': {\n        borderTop: 0,\n      },\n    };\n  }\n\n  if (variant === 'filled') {\n    return {\n      borderRadius,\n\n      '&[data-active]': {\n        backgroundColor: filledColor,\n      },\n    };\n  }\n\n  if (variant === 'separated') {\n    return {\n      borderRadius,\n      backgroundColor: filledColor,\n      border: '1px solid transparent',\n      transition: 'background-color 150ms ease',\n\n      '& + &': {\n        marginTop: theme.spacing.md,\n      },\n\n      '&[data-active]': {\n        backgroundColor: theme.colorScheme === 'dark' ? theme.colors.dark[7] : theme.white,\n        borderColor,\n      },\n    };\n  }\n\n  return {};\n}\n\nexport default createStyles((theme, params: AccordionStylesParams) => ({\n  item: getVariantStyles(theme, params),\n}));\n"]},"metadata":{},"sourceType":"module"}