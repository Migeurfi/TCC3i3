{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Skeleton.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  height: \"auto\",\n  width: \"100%\",\n  visible: true,\n  animate: true\n};\nconst Skeleton = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Skeleton\", defaultProps, props),\n        {\n    height,\n    width,\n    visible,\n    animate,\n    className,\n    circle,\n    radius,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"height\", \"width\", \"visible\", \"animate\", \"className\", \"circle\", \"radius\", \"unstyled\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    height,\n    width,\n    circle,\n    radius,\n    animate\n  }, {\n    unstyled,\n    name: \"Skeleton\"\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, {\n      [classes.visible]: visible\n    }, className),\n    ref\n  }, others));\n});\nSkeleton.displayName = \"@mantine/core/Skeleton\";\nexport { Skeleton };","map":{"version":3,"sources":["../../src/Skeleton/Skeleton.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { DefaultProps, MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, { SkeletonStylesParams } from './Skeleton.styles';\n\nexport interface SkeletonProps\n  extends DefaultProps<never, SkeletonStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Should skeleton overlay be displayed */\n  visible?: boolean;\n\n  /** Skeleton height */\n  height?: number | string;\n\n  /** Skeleton width */\n  width?: number | string;\n\n  /** If Skeleton is a circle, it's width and border-radius will be equal to height */\n  circle?: boolean;\n\n  /** Radius from theme.radius or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Whether to show the animation effect */\n  animate?: boolean;\n}\n\nconst defaultProps: Partial<SkeletonProps> = {\n  height: 'auto',\n  width: '100%',\n  visible: true,\n  animate: true,\n};\n\nexport const Skeleton = forwardRef<HTMLDivElement, SkeletonProps>((props, ref) => {\n  const { height, width, visible, animate, className, circle, radius, unstyled, ...others } =\n    useComponentDefaultProps('Skeleton', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { height, width, circle, radius, animate },\n    { unstyled, name: 'Skeleton' }\n  );\n\n  return (\n    <Box\n      className={cx(classes.root, { [classes.visible]: visible }, className)}\n      ref={ref}\n      {...others}\n    />\n  );\n});\n\nSkeleton.displayName = '@mantine/core/Skeleton';\n"]},"metadata":{},"sourceType":"module"}