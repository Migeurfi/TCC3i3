{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { useUncontrolled } from '@mantine/hooks';\nimport useStyles from './NavLink.styles.js';\nimport { UnstyledButton } from '../UnstyledButton/UnstyledButton.js';\nimport { Text } from '../Text/Text.js';\nimport { ChevronIcon } from '../Accordion/ChevronIcon.js';\nimport { Collapse } from '../Collapse/Collapse.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  variant: \"light\",\n  childrenOffset: \"lg\"\n};\n\nconst _NavLink = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"NavLink\", defaultProps, props),\n        {\n    label,\n    description,\n    icon,\n    rightSection,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    active,\n    color,\n    variant,\n    noWrap,\n    children,\n    opened,\n    defaultOpened,\n    onChange,\n    disableRightSectionRotation,\n    childrenOffset,\n    disabled,\n    onClick\n  } = _a,\n        others = __objRest(_a, [\"label\", \"description\", \"icon\", \"rightSection\", \"className\", \"classNames\", \"styles\", \"unstyled\", \"active\", \"color\", \"variant\", \"noWrap\", \"children\", \"opened\", \"defaultOpened\", \"onChange\", \"disableRightSectionRotation\", \"childrenOffset\", \"disabled\", \"onClick\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    color,\n    variant,\n    noWrap,\n    childrenOffset,\n    alignIcon: description ? \"top\" : \"center\"\n  }, {\n    name: \"NavLink\",\n    classNames,\n    styles,\n    unstyled\n  });\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange\n  });\n  const withChildren = !!children;\n\n  const handleClick = event => {\n    if (withChildren) {\n      event.preventDefault();\n      onClick == null ? void 0 : onClick(event);\n      setOpened(!_opened);\n    } else {\n      onClick == null ? void 0 : onClick(event);\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement(UnstyledButton, __spreadValues({\n    ref,\n    className: cx(classes.root, className),\n    \"data-active\": active || void 0,\n    onClick: handleClick,\n    unstyled,\n    \"data-expanded\": _opened || void 0,\n    \"data-disabled\": disabled || void 0,\n    disabled\n  }, others), icon && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.icon\n  }, icon), /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.body\n  }, /* @__PURE__ */React.createElement(Text, {\n    component: \"span\",\n    size: \"sm\",\n    className: classes.label\n  }, label), /* @__PURE__ */React.createElement(Text, {\n    component: \"span\",\n    color: \"dimmed\",\n    size: \"xs\",\n    \"data-active\": active || void 0,\n    className: classes.description\n  }, description)), (withChildren || rightSection) && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.rightSection,\n    \"data-rotate\": _opened && !disableRightSectionRotation || void 0\n  }, withChildren ? rightSection || /* @__PURE__ */React.createElement(ChevronIcon, {\n    width: 14,\n    height: 14,\n    style: {\n      transform: \"rotate(-90deg)\"\n    }\n  }) : rightSection)), /* @__PURE__ */React.createElement(Collapse, {\n    in: _opened\n  }, /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.children\n  }, children)));\n});\n\n_NavLink.displayName = \"@mantine/core/NavLink\";\nconst NavLink = createPolymorphicComponent(_NavLink);\nexport { NavLink, _NavLink };","map":{"version":3,"sources":["../../src/NavLink/NavLink.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineColor,\n  MantineNumberSize,\n  Selectors,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { UnstyledButton } from '../UnstyledButton';\nimport { ChevronIcon } from '../Accordion';\nimport { Collapse } from '../Collapse';\nimport { Text } from '../Text';\nimport useStyles, { NavLinkStylesParams } from './NavLink.styles';\n\nexport type NavLinkStylesNames = Selectors<typeof useStyles>;\n\nexport interface NavLinkProps extends DefaultProps<NavLinkStylesNames, NavLinkStylesParams> {\n  /** Main link content */\n  label?: React.ReactNode;\n\n  /** Secondary link description */\n  description?: React.ReactNode;\n\n  /** Icon displayed on the left side of the label */\n  icon?: React.ReactNode;\n\n  /** Section displayed on the right side of the label */\n  rightSection?: React.ReactNode;\n\n  /** Determines whether link should have active styles */\n  active?: boolean;\n\n  /** Key of theme.colors, active link color */\n  color?: MantineColor;\n\n  /** Active link variant */\n  variant?: 'filled' | 'light' | 'subtle';\n\n  /** If prop is set then label and description will not wrap on the next line */\n  noWrap?: boolean;\n\n  /** Child links */\n  children?: React.ReactNode;\n\n  /** Controlled nested items collapse state */\n  opened?: boolean;\n\n  /** Uncontrolled nested items collapse initial state */\n  defaultOpened?: boolean;\n\n  /** Called when open state changes */\n  onChange?(opened: boolean): void;\n\n  /** If set to true, right section will not rotate when collapse is opened */\n  disableRightSectionRotation?: boolean;\n\n  /** Key of theme.spacing or number to set collapsed links padding-left in px */\n  childrenOffset?: MantineNumberSize;\n\n  /** Adds disabled styles to root element */\n  disabled?: boolean;\n}\n\nconst defaultProps: Partial<NavLinkProps> = {\n  variant: 'light',\n  childrenOffset: 'lg',\n};\n\nexport const _NavLink = forwardRef<HTMLButtonElement, NavLinkProps>((props, ref) => {\n  const {\n    label,\n    description,\n    icon,\n    rightSection,\n    className,\n    classNames,\n    styles,\n    unstyled,\n    active,\n    color,\n    variant,\n    noWrap,\n    children,\n    opened,\n    defaultOpened,\n    onChange,\n    disableRightSectionRotation,\n    childrenOffset,\n    disabled,\n    // @ts-expect-error\n    onClick,\n    ...others\n  } = useComponentDefaultProps('NavLink', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { color, variant, noWrap, childrenOffset, alignIcon: description ? 'top' : 'center' },\n    { name: 'NavLink', classNames, styles, unstyled }\n  );\n\n  const [_opened, setOpened] = useUncontrolled({\n    value: opened,\n    defaultValue: defaultOpened,\n    finalValue: false,\n    onChange,\n  });\n\n  const withChildren = !!children;\n\n  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    if (withChildren) {\n      event.preventDefault();\n      onClick?.(event);\n      setOpened(!_opened);\n    } else {\n      onClick?.(event);\n    }\n  };\n\n  return (\n    <>\n      <UnstyledButton\n        ref={ref}\n        className={cx(classes.root, className)}\n        data-active={active || undefined}\n        onClick={handleClick}\n        unstyled={unstyled}\n        data-expanded={_opened || undefined}\n        data-disabled={disabled || undefined}\n        disabled={disabled}\n        {...others}\n      >\n        {icon && <span className={classes.icon}>{icon}</span>}\n        <span className={classes.body}>\n          <Text component=\"span\" size=\"sm\" className={classes.label}>\n            {label}\n          </Text>\n          <Text\n            component=\"span\"\n            color=\"dimmed\"\n            size=\"xs\"\n            data-active={active || undefined}\n            className={classes.description}\n          >\n            {description}\n          </Text>\n        </span>\n        {(withChildren || rightSection) && (\n          <span\n            className={classes.rightSection}\n            data-rotate={(_opened && !disableRightSectionRotation) || undefined}\n          >\n            {withChildren\n              ? rightSection || (\n                  <ChevronIcon width={14} height={14} style={{ transform: 'rotate(-90deg)' }} />\n                )\n              : rightSection}\n          </span>\n        )}\n      </UnstyledButton>\n      <Collapse in={_opened}>\n        <div className={classes.children}>{children}</div>\n      </Collapse>\n    </>\n  );\n});\n\n_NavLink.displayName = '@mantine/core/NavLink';\n\nexport const NavLink = createPolymorphicComponent<'button', NavLinkProps>(_NavLink);\n"]},"metadata":{},"sourceType":"module"}