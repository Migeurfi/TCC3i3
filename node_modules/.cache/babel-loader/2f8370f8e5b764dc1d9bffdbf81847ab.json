{"ast":null,"code":"import React, { forwardRef, useRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  multiple: false\n};\nconst FileButton = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"FileButton\", defaultProps, props),\n        {\n    onChange,\n    children,\n    multiple,\n    accept,\n    name,\n    form,\n    resetRef\n  } = _a,\n        others = __objRest(_a, [\"onChange\", \"children\", \"multiple\", \"accept\", \"name\", \"form\", \"resetRef\"]);\n\n  const inputRef = useRef();\n\n  const onClick = () => {\n    inputRef.current.click();\n  };\n\n  const handleChange = event => {\n    if (multiple) {\n      onChange(Array.from(event.currentTarget.files));\n    } else {\n      onChange(event.currentTarget.files[0] || null);\n    }\n  };\n\n  const reset = () => {\n    inputRef.current.value = \"\";\n  };\n\n  assignRef(resetRef, reset);\n  return /* @__PURE__ */React.createElement(React.Fragment, null, children(__spreadValues({\n    onClick\n  }, others)), /* @__PURE__ */React.createElement(\"input\", {\n    style: {\n      display: \"none\"\n    },\n    type: \"file\",\n    accept,\n    multiple,\n    onChange: handleChange,\n    ref: useMergedRef(ref, inputRef),\n    name,\n    form\n  }));\n});\nFileButton.displayName = \"@mantine/core/FileButton\";\nexport { FileButton };","map":{"version":3,"sources":["../../src/FileButton/FileButton.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { useRef, forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { assignRef, useMergedRef } from '@mantine/hooks';\n\nexport interface FileButtonProps<Multiple extends boolean = false> {\n  /** Called when files are picked */\n  onChange(payload: Multiple extends true ? File[] : File | null): void;\n\n  /** Function that receives button props and returns react node that should be rendered */\n  children(props: { onClick(): void }): React.ReactNode;\n\n  /** Determines whether user can pick more than one file */\n  multiple?: Multiple;\n\n  /** File input accept attribute, for example, \"image/png,image/jpeg\" */\n  accept?: string;\n\n  /** Input name attribute */\n  name?: string;\n\n  /** Input form attribute */\n  form?: string;\n\n  /** Function that should be called when value changes to null or empty array */\n  resetRef?: React.ForwardedRef<() => void>;\n}\n\nconst defaultProps: Partial<FileButtonProps> = {\n  multiple: false,\n};\n\ntype FileButtonComponent = (<Multiple extends boolean = false>(\n  props: FileButtonProps<Multiple>\n) => React.ReactElement) & { displayName?: string };\n\nexport const FileButton: FileButtonComponent = forwardRef<HTMLInputElement, FileButtonProps>(\n  (props, ref) => {\n    const { onChange, children, multiple, accept, name, form, resetRef, ...others } =\n      useComponentDefaultProps('FileButton', defaultProps, props);\n\n    const inputRef = useRef<HTMLInputElement>();\n\n    const onClick = () => {\n      inputRef.current.click();\n    };\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n      if (multiple) {\n        onChange(Array.from(event.currentTarget.files) as any);\n      } else {\n        onChange(event.currentTarget.files[0] || null);\n      }\n    };\n\n    const reset = () => {\n      inputRef.current.value = '';\n    };\n\n    assignRef(resetRef, reset);\n\n    return (\n      <>\n        {children({ onClick, ...others })}\n\n        <input\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept={accept}\n          multiple={multiple}\n          onChange={handleChange}\n          ref={useMergedRef(ref, inputRef)}\n          name={name}\n          form={form}\n        />\n      </>\n    );\n  }\n) as any;\n\nFileButton.displayName = '@mantine/core/FileButton';\n"]},"metadata":{},"sourceType":"module"}