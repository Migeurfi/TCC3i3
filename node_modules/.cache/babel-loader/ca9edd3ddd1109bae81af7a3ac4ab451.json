{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { getDefaultZIndex, useComponentDefaultProps } from '@mantine/styles';\nimport useStyles from './Indicator.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  position: \"top-end\",\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  size: 10,\n  radius: 1e3,\n  zIndex: getDefaultZIndex(\"app\")\n};\nconst Indicator = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Indicator\", defaultProps, props),\n        {\n    children,\n    position,\n    offset,\n    size,\n    radius,\n    inline,\n    withBorder,\n    className,\n    color,\n    styles,\n    label,\n    classNames,\n    disabled,\n    zIndex,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"children\", \"position\", \"offset\", \"size\", \"radius\", \"inline\", \"withBorder\", \"className\", \"color\", \"styles\", \"label\", \"classNames\", \"disabled\", \"zIndex\", \"unstyled\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    position,\n    offset,\n    size,\n    radius,\n    inline,\n    color,\n    withBorder,\n    zIndex,\n    withLabel: !!label\n  }, {\n    name: \"Indicator\",\n    classNames,\n    styles,\n    unstyled\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref,\n    className: cx(classes.root, className)\n  }, others), !disabled && /* @__PURE__ */React.createElement(\"div\", {\n    className: classes.indicator\n  }, label), children);\n});\nIndicator.displayName = \"@mantine/core/Indicator\";\nexport { Indicator };","map":{"version":3,"sources":["../../src/Indicator/Indicator.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable react/no-unused-prop-types */\nimport React, { forwardRef } from 'react';\nimport {\n  Selectors,\n  DefaultProps,\n  MantineColor,\n  MantineNumberSize,\n  useComponentDefaultProps,\n  getDefaultZIndex,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport { IndicatorPosition } from './Indicator.types';\nimport useStyles, { IndicatorStylesParams } from './Indicator.styles';\n\nexport type IndicatorStylesNames = Selectors<typeof useStyles>;\n\nexport interface IndicatorProps\n  extends DefaultProps<IndicatorStylesNames, IndicatorStylesParams>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Element that should have an indicator */\n  children: React.ReactNode;\n\n  /** Indicator position relative to child element */\n  position?: IndicatorPosition;\n\n  /** Changes position offset, usually used when element has border-radius */\n  offset?: number;\n\n  /** Determines whether indicator container should be an inline element */\n  inline?: boolean;\n\n  /** Size in px */\n  size?: number;\n\n  /** Indicator label */\n  label?: React.ReactNode;\n\n  /** border-radius from theme.radius or number value to set radius in px */\n  radius?: MantineNumberSize;\n\n  /** Color from theme.colors or any other valid CSS color value */\n  color?: MantineColor;\n\n  /** Determines whether indicator should have border */\n  withBorder?: boolean;\n\n  /** When component is disabled it renders children without indicator */\n  disabled?: boolean;\n\n  /** Indicator z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n}\n\nconst defaultProps: Partial<IndicatorProps> = {\n  position: 'top-end',\n  offset: 0,\n  inline: false,\n  withBorder: false,\n  disabled: false,\n  size: 10,\n  radius: 1000,\n  zIndex: getDefaultZIndex('app'),\n};\n\nexport const Indicator = forwardRef<HTMLDivElement, IndicatorProps>((props, ref) => {\n  const {\n    children,\n    position,\n    offset,\n    size,\n    radius,\n    inline,\n    withBorder,\n    className,\n    color,\n    styles,\n    label,\n    classNames,\n    disabled,\n    zIndex,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Indicator', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    { position, offset, size, radius, inline, color, withBorder, zIndex, withLabel: !!label },\n    { name: 'Indicator', classNames, styles, unstyled }\n  );\n\n  return (\n    <Box ref={ref} className={cx(classes.root, className)} {...others}>\n      {!disabled && <div className={classes.indicator}>{label}</div>}\n      {children}\n    </Box>\n  );\n});\n\nIndicator.displayName = '@mantine/core/Indicator';\n"]},"metadata":{},"sourceType":"module"}