{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport { autoUpdate } from '@floating-ui/react-dom-interactions';\nimport { useDidUpdate } from '@mantine/hooks';\n\nfunction useFloatingAutoUpdate({\n  opened,\n  floating,\n  positionDependencies\n}) {\n  const [delayedUpdate, setDelayedUpdate] = useState(0);\n  useEffect(() => {\n    if (floating.refs.reference.current && floating.refs.floating.current) {\n      return autoUpdate(floating.refs.reference.current, floating.refs.floating.current, floating.update);\n    }\n\n    return void 0;\n  }, [floating.refs.reference, floating.refs.floating, opened, delayedUpdate]);\n  useDidUpdate(() => {\n    floating.update();\n  }, positionDependencies);\n  useDidUpdate(() => {\n    setDelayedUpdate(c => c + 1);\n  }, [opened]);\n}\n\nexport { useFloatingAutoUpdate };","map":{"version":3,"sources":["../../src/Floating/use-floating-auto-update.ts"],"names":[],"mappings":";;;;AAGO,SAAS,qBAAT,CAA+B;AAAE,EAAA,MAAF;AAAU,EAAA,QAAV;AAAoB,EAAA;AAApB,CAA/B,EAA2E;AAChF,QAAM,CAAC,aAAD,EAAgB,gBAAhB,IAAoC,QAAQ,CAAC,CAAD,CAAlD;AACA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,QAAQ,CAAC,IAAT,CAAc,SAAd,CAAwB,OAAxB,IAAmC,QAAQ,CAAC,IAAT,CAAc,QAAd,CAAuB,OAA9D,EAAuE;AACrE,aAAO,UAAU,CAAC,QAAQ,CAAC,IAAT,CAAc,SAAd,CAAwB,OAAzB,EAAkC,QAAQ,CAAC,IAAT,CAAc,QAAd,CAAuB,OAAzD,EAAkE,QAAQ,CAAC,MAA3E,CAAjB;AACD;;AACD,WAAO,KAAK,CAAZ;AACD,GALQ,EAKN,CAAC,QAAQ,CAAC,IAAT,CAAc,SAAf,EAA0B,QAAQ,CAAC,IAAT,CAAc,QAAxC,EAAkD,MAAlD,EAA0D,aAA1D,CALM,CAAT;AAMA,EAAA,YAAY,CAAC,MAAM;AACjB,IAAA,QAAQ,CAAC,MAAT;AACD,GAFW,EAET,oBAFS,CAAZ;AAGA,EAAA,YAAY,CAAC,MAAM;AACjB,IAAA,gBAAgB,CAAE,CAAD,IAAO,CAAC,GAAG,CAAZ,CAAhB;AACD,GAFW,EAET,CAAC,MAAD,CAFS,CAAZ;AAGF","sourcesContent":["import { useState, useEffect } from 'react';\nimport { autoUpdate } from '@floating-ui/react-dom-interactions';\nimport { useDidUpdate } from '@mantine/hooks';\n\ninterface Payload {\n  opened: boolean;\n  floating: {\n    update(): void;\n    refs: {\n      floating: React.MutableRefObject<any>;\n      reference: React.MutableRefObject<any>;\n    };\n  };\n  positionDependencies: any[];\n}\n\nexport function useFloatingAutoUpdate({ opened, floating, positionDependencies }: Payload) {\n  const [delayedUpdate, setDelayedUpdate] = useState(0);\n\n  useEffect(() => {\n    if (floating.refs.reference.current && floating.refs.floating.current) {\n      return autoUpdate(\n        floating.refs.reference.current,\n        floating.refs.floating.current,\n        floating.update\n      );\n    }\n\n    return undefined;\n  }, [floating.refs.reference, floating.refs.floating, opened, delayedUpdate]);\n\n  useDidUpdate(() => {\n    floating.update();\n  }, positionDependencies);\n\n  useDidUpdate(() => {\n    setDelayedUpdate((c) => c + 1);\n  }, [opened]);\n}\n"]},"metadata":{},"sourceType":"module"}