{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Text } from '../Text/Text.js';\nimport { Mark } from '../Mark/Mark.js';\nimport { highlighter } from './highlighter/highlighter.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  highlightColor: \"yellow\"\n};\n\nconst _Highlight = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Highlight\", defaultProps, props),\n        {\n    children,\n    highlight,\n    highlightColor,\n    highlightStyles,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"children\", \"highlight\", \"highlightColor\", \"highlightStyles\", \"unstyled\"]);\n\n  const highlightChunks = highlighter(children, highlight);\n  return /* @__PURE__ */React.createElement(Text, __spreadValues({\n    unstyled,\n    ref\n  }, others), highlightChunks.map(({\n    chunk,\n    highlighted\n  }, i) => highlighted ? /* @__PURE__ */React.createElement(Mark, {\n    unstyled,\n    key: i,\n    color: highlightColor,\n    sx: highlightStyles\n  }, chunk) : /* @__PURE__ */React.createElement(\"span\", {\n    key: i\n  }, chunk)));\n});\n\n_Highlight.displayName = \"@mantine/core/Highlight\";\nconst Highlight = createPolymorphicComponent(_Highlight);\nexport { Highlight, _Highlight };","map":{"version":3,"sources":["../../src/Highlight/Highlight.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { MantineColor, MantineTheme, CSSObject, useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Text, TextProps } from '../Text/Text';\nimport { Mark } from '../Mark/Mark';\nimport { highlighter } from './highlighter/highlighter';\n\nexport interface HighlightProps extends TextProps {\n  /** Substring or an array of substrings to highlight in children */\n  highlight: string | string[];\n\n  /** Color from theme that is used for highlighting */\n  highlightColor?: MantineColor;\n\n  /** Styles applied to highlighted part */\n  highlightStyles?: CSSObject | ((theme: MantineTheme) => CSSObject);\n\n  /** Full string part of which will be highlighted */\n  children: string;\n}\n\nconst defaultProps: Partial<HighlightProps> = {\n  highlightColor: 'yellow',\n};\n\nexport const _Highlight = forwardRef<HTMLDivElement, HighlightProps>((props, ref) => {\n  const { children, highlight, highlightColor, highlightStyles, unstyled, ...others } =\n    useComponentDefaultProps('Highlight', defaultProps, props);\n  const highlightChunks = highlighter(children, highlight);\n\n  return (\n    <Text unstyled={unstyled} ref={ref} {...others}>\n      {highlightChunks.map(({ chunk, highlighted }, i) =>\n        highlighted ? (\n          <Mark unstyled={unstyled} key={i} color={highlightColor} sx={highlightStyles}>\n            {chunk}\n          </Mark>\n        ) : (\n          <span key={i}>{chunk}</span>\n        )\n      )}\n    </Text>\n  );\n});\n\n_Highlight.displayName = '@mantine/core/Highlight';\n\nexport const Highlight = createPolymorphicComponent<'div', HighlightProps>(_Highlight);\n"]},"metadata":{},"sourceType":"module"}