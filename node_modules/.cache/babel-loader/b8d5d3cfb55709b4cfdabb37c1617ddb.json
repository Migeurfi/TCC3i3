{"ast":null,"code":"import { rgba } from '../rgba/rgba.js';\nimport { themeColor } from '../theme-color/theme-color.js';\nimport { primaryShade } from '../primary-shade/primary-shade.js';\nimport { gradient } from '../gradient/gradient.js';\n\nfunction getColorIndexInfo(color, theme) {\n  if (typeof color === \"string\" && color.includes(\".\")) {\n    const [splittedColor, _splittedShade] = color.split(\".\");\n    const splittedShade = parseInt(_splittedShade, 10);\n\n    if (splittedColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n      return {\n        isSplittedColor: true,\n        key: splittedColor,\n        shade: splittedShade\n      };\n    }\n  }\n\n  return {\n    isSplittedColor: false\n  };\n}\n\nfunction variant(theme) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n  const getGradient = gradient(theme);\n  return ({\n    variant: variant2,\n    color,\n    gradient: gradient2,\n    primaryFallback\n  }) => {\n    const colorInfo = getColorIndexInfo(color, theme);\n\n    if (variant2 === \"light\") {\n      return {\n        border: \"transparent\",\n        background: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.2 : 1),\n        color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n        hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 7 : 1, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.25 : 0.65)\n      };\n    }\n\n    if (variant2 === \"default\") {\n      return {\n        border: theme.colorScheme === \"dark\" ? theme.colors.dark[4] : theme.colors.gray[4],\n        background: theme.colorScheme === \"dark\" ? theme.colors.dark[6] : theme.white,\n        color: theme.colorScheme === \"dark\" ? theme.white : theme.black,\n        hover: theme.colorScheme === \"dark\" ? theme.colors.dark[5] : theme.colors.gray[0]\n      };\n    }\n\n    if (variant2 === \"white\") {\n      return {\n        border: \"transparent\",\n        background: theme.white,\n        color: getThemeColor(color, getPrimaryShade()),\n        hover: null\n      };\n    }\n\n    if (variant2 === \"outline\") {\n      return {\n        border: getThemeColor(color, theme.colorScheme === \"dark\" ? 5 : getPrimaryShade(\"light\")),\n        background: \"transparent\",\n        color: getThemeColor(color, theme.colorScheme === \"dark\" ? 5 : getPrimaryShade(\"light\")),\n        hover: theme.colorScheme === \"dark\" ? rgba(getThemeColor(color, 5, primaryFallback, false), 0.05) : rgba(getThemeColor(color, 0, primaryFallback, false), 0.35)\n      };\n    }\n\n    if (variant2 === \"gradient\") {\n      return {\n        background: getGradient(gradient2),\n        color: theme.white,\n        border: \"transparent\",\n        hover: null\n      };\n    }\n\n    if (variant2 === \"subtle\") {\n      return {\n        border: \"transparent\",\n        background: \"transparent\",\n        color: color === \"dark\" ? theme.colorScheme === \"dark\" ? theme.colors.dark[0] : theme.colors.dark[9] : getThemeColor(color, theme.colorScheme === \"dark\" ? 2 : getPrimaryShade(\"light\")),\n        hover: rgba(getThemeColor(color, theme.colorScheme === \"dark\" ? 8 : 0, primaryFallback, false), theme.colorScheme === \"dark\" ? 0.2 : 1)\n      };\n    }\n\n    const _primaryShade = getPrimaryShade();\n\n    const _shade = colorInfo.isSplittedColor ? colorInfo.shade : _primaryShade;\n\n    const _color = colorInfo.isSplittedColor ? colorInfo.key : color;\n\n    return {\n      border: \"transparent\",\n      background: getThemeColor(_color, _shade, primaryFallback),\n      color: theme.white,\n      hover: getThemeColor(_color, _shade === 9 ? 8 : _shade + 1)\n    };\n  };\n}\n\nexport { variant };","map":{"version":3,"sources":["../../../../../src/theme/functions/fns/variant/variant.ts"],"names":[],"mappings":"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","sourcesContent":["import type { MantineColor, MantineGradient, MantineThemeBase } from '../../../types';\nimport { rgba } from '../rgba/rgba';\nimport { themeColor } from '../theme-color/theme-color';\nimport { primaryShade } from '../primary-shade/primary-shade';\nimport { gradient } from '../gradient/gradient';\n\nexport interface VariantInput {\n  variant: 'filled' | 'light' | 'outline' | 'default' | 'gradient' | 'white' | 'subtle';\n  color?: MantineColor;\n  gradient?: MantineGradient;\n  primaryFallback?: boolean;\n}\n\nexport interface VariantOutput {\n  border: string;\n  background: string;\n  color: string;\n  hover: string;\n}\n\ninterface ColorInfo {\n  isSplittedColor: boolean;\n  key?: string;\n  shade?: number;\n}\n\nfunction getColorIndexInfo(color: string, theme: MantineThemeBase): ColorInfo {\n  if (typeof color === 'string' && color.includes('.')) {\n    const [splittedColor, _splittedShade] = color.split('.');\n    const splittedShade = parseInt(_splittedShade, 10);\n\n    if (splittedColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n      return { isSplittedColor: true, key: splittedColor, shade: splittedShade };\n    }\n  }\n\n  return { isSplittedColor: false };\n}\n\nexport function variant(theme: MantineThemeBase) {\n  const getThemeColor = themeColor(theme);\n  const getPrimaryShade = primaryShade(theme);\n  const getGradient = gradient(theme);\n\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  return ({ variant, color, gradient, primaryFallback }: VariantInput): VariantOutput => {\n    const colorInfo = getColorIndexInfo(color, theme);\n\n    if (variant === 'light') {\n      return {\n        border: 'transparent',\n        background: rgba(\n          getThemeColor(color, theme.colorScheme === 'dark' ? 8 : 0, primaryFallback, false),\n          theme.colorScheme === 'dark' ? 0.2 : 1\n        ),\n        color:\n          color === 'dark'\n            ? theme.colorScheme === 'dark'\n              ? theme.colors.dark[0]\n              : theme.colors.dark[9]\n            : getThemeColor(color, theme.colorScheme === 'dark' ? 2 : getPrimaryShade('light')),\n        hover: rgba(\n          getThemeColor(color, theme.colorScheme === 'dark' ? 7 : 1, primaryFallback, false),\n          theme.colorScheme === 'dark' ? 0.25 : 0.65\n        ),\n      };\n    }\n\n    if (variant === 'default') {\n      return {\n        border: theme.colorScheme === 'dark' ? theme.colors.dark[4] : theme.colors.gray[4],\n        background: theme.colorScheme === 'dark' ? theme.colors.dark[6] : theme.white,\n        color: theme.colorScheme === 'dark' ? theme.white : theme.black,\n        hover: theme.colorScheme === 'dark' ? theme.colors.dark[5] : theme.colors.gray[0],\n      };\n    }\n\n    if (variant === 'white') {\n      return {\n        border: 'transparent',\n        background: theme.white,\n        color: getThemeColor(color, getPrimaryShade()),\n        hover: null,\n      };\n    }\n\n    if (variant === 'outline') {\n      return {\n        border: getThemeColor(color, theme.colorScheme === 'dark' ? 5 : getPrimaryShade('light')),\n        background: 'transparent',\n        color: getThemeColor(color, theme.colorScheme === 'dark' ? 5 : getPrimaryShade('light')),\n        hover:\n          theme.colorScheme === 'dark'\n            ? rgba(getThemeColor(color, 5, primaryFallback, false), 0.05)\n            : rgba(getThemeColor(color, 0, primaryFallback, false), 0.35),\n      };\n    }\n\n    if (variant === 'gradient') {\n      return {\n        background: getGradient(gradient),\n        color: theme.white,\n        border: 'transparent',\n        hover: null,\n      };\n    }\n\n    if (variant === 'subtle') {\n      return {\n        border: 'transparent',\n        background: 'transparent',\n        color:\n          color === 'dark'\n            ? theme.colorScheme === 'dark'\n              ? theme.colors.dark[0]\n              : theme.colors.dark[9]\n            : getThemeColor(color, theme.colorScheme === 'dark' ? 2 : getPrimaryShade('light')),\n        hover: rgba(\n          getThemeColor(color, theme.colorScheme === 'dark' ? 8 : 0, primaryFallback, false),\n          theme.colorScheme === 'dark' ? 0.2 : 1\n        ),\n      };\n    }\n\n    const _primaryShade = getPrimaryShade();\n    const _shade = colorInfo.isSplittedColor ? colorInfo.shade : _primaryShade;\n    const _color = colorInfo.isSplittedColor ? colorInfo.key : color;\n\n    return {\n      border: 'transparent',\n      background: getThemeColor(_color, _shade, primaryFallback),\n      color: theme.white,\n      hover: getThemeColor(_color, _shade === 9 ? 8 : _shade + 1),\n    };\n  };\n}\n"]},"metadata":{},"sourceType":"module"}