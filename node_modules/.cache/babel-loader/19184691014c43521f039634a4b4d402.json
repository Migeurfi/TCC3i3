{"ast":null,"code":"function size(props) {\n  if (typeof props.size === \"number\") {\n    return props.size;\n  }\n\n  const computedSize = props.sizes[props.size];\n  return computedSize !== void 0 ? computedSize : props.size || props.sizes.md;\n}\n\nexport { size };","map":{"version":3,"sources":["../../../../../src/theme/functions/fns/size/size.ts"],"names":[],"mappings":"AAAO,SAAS,IAAT,CAAc,KAAd,EAAqB;AAC1B,MAAI,OAAO,KAAK,CAAC,IAAb,KAAsB,QAA1B,EAAoC;AAClC,WAAO,KAAK,CAAC,IAAb;AACD;;AACD,QAAM,YAAY,GAAG,KAAK,CAAC,KAAN,CAAY,KAAK,CAAC,IAAlB,CAArB;AACA,SAAO,YAAY,KAAK,KAAK,CAAtB,GAA0B,YAA1B,GAAyC,KAAK,CAAC,IAAN,IAAc,KAAK,CAAC,KAAN,CAAY,EAA1E;AACF","sourcesContent":["interface GetSize {\n  size: string | number;\n  sizes: Record<string, any>;\n}\n\nexport function size(props: GetSize) {\n  if (typeof props.size === 'number') {\n    return props.size;\n  }\n\n  const computedSize = props.sizes[props.size];\n\n  return computedSize !== undefined ? computedSize : props.size || props.sizes.md;\n}\n"]},"metadata":{},"sourceType":"module"}