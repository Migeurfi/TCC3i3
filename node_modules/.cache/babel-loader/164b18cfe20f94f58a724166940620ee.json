{"ast":null,"code":"import { primaryShade } from '../primary-shade/primary-shade.js';\n\nfunction themeColor(theme) {\n  const getPrimaryShade = primaryShade(theme);\n  return (color, shade, primaryFallback = true, useSplittedShade = true) => {\n    if (typeof color === \"string\" && color.includes(\".\")) {\n      const [splitterColor, _splittedShade] = color.split(\".\");\n      const splittedShade = parseInt(_splittedShade, 10);\n\n      if (splitterColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n        return theme.colors[splitterColor][typeof shade === \"number\" && !useSplittedShade ? shade : splittedShade];\n      }\n    }\n\n    const _shade = typeof shade === \"number\" ? shade : getPrimaryShade();\n\n    return color in theme.colors ? theme.colors[color][_shade] : primaryFallback ? theme.colors[theme.primaryColor][_shade] : color;\n  };\n}\n\nexport { themeColor };","map":{"version":3,"sources":["../../../../../src/theme/functions/fns/theme-color/theme-color.ts"],"names":[],"mappings":";;AACO,SAAS,UAAT,CAAoB,KAApB,EAA2B;AAChC,QAAM,eAAe,GAAG,YAAY,CAAC,KAAD,CAApC;AACA,SAAO,CAAC,KAAD,EAAQ,KAAR,EAAe,eAAe,GAAG,IAAjC,EAAuC,gBAAgB,GAAG,IAA1D,KAAmE;AACxE,QAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,KAAK,CAAC,QAAN,CAAe,GAAf,CAAjC,EAAsD;AACpD,YAAM,CAAC,aAAD,EAAgB,cAAhB,IAAkC,KAAK,CAAC,KAAN,CAAY,GAAZ,CAAxC;AACA,YAAM,aAAa,GAAG,QAAQ,CAAC,cAAD,EAAiB,EAAjB,CAA9B;;AACA,UAAI,aAAa,IAAI,KAAK,CAAC,MAAvB,IAAiC,aAAa,IAAI,CAAlD,IAAuD,aAAa,GAAG,EAA3E,EAA+E;AAC7E,eAAO,KAAK,CAAC,MAAN,CAAa,aAAb,EAA4B,OAAO,KAAP,KAAiB,QAAjB,IAA6B,CAAC,gBAA9B,GAAiD,KAAjD,GAAyD,aAArF,CAAP;AACD;AACF;;AACD,UAAM,MAAM,GAAG,OAAO,KAAP,KAAiB,QAAjB,GAA4B,KAA5B,GAAoC,eAAe,EAAlE;;AACA,WAAO,KAAK,IAAI,KAAK,CAAC,MAAf,GAAwB,KAAK,CAAC,MAAN,CAAa,KAAb,EAAoB,MAApB,CAAxB,GAAsD,eAAe,GAAG,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,YAAnB,EAAiC,MAAjC,CAAH,GAA8C,KAA1H;AACD,GAVD;AAWF","sourcesContent":["import { primaryShade } from '../primary-shade/primary-shade';\nimport type { MantineThemeBase } from '../../../types';\n\nexport function themeColor(theme: MantineThemeBase) {\n  const getPrimaryShade = primaryShade(theme);\n\n  return (\n    color: string,\n    shade?: number,\n    primaryFallback: boolean = true,\n    useSplittedShade: boolean = true\n  ) => {\n    if (typeof color === 'string' && color.includes('.')) {\n      const [splitterColor, _splittedShade] = color.split('.');\n      const splittedShade = parseInt(_splittedShade, 10);\n\n      if (splitterColor in theme.colors && splittedShade >= 0 && splittedShade < 10) {\n        return theme.colors[splitterColor][\n          typeof shade === 'number' && !useSplittedShade ? shade : splittedShade\n        ];\n      }\n    }\n\n    const _shade = typeof shade === 'number' ? shade : getPrimaryShade();\n\n    return color in theme.colors\n      ? theme.colors[color][_shade]\n      : primaryFallback\n      ? theme.colors[theme.primaryColor][_shade]\n      : color;\n  };\n}\n"]},"metadata":{},"sourceType":"module"}