{"ast":null,"code":"import { createStyles } from '@mantine/styles';\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles.js';\nvar useStyles = createStyles((theme, {\n  size\n}, getRef) => ({\n  sliderThumb: {\n    ref: getRef(\"sliderThumb\")\n  },\n  slider: {\n    position: \"relative\",\n    height: theme.fn.size({\n      size,\n      sizes: THUMB_SIZES\n    }) + 2,\n    boxSizing: \"border-box\",\n    marginLeft: theme.fn.size({\n      size,\n      sizes: THUMB_SIZES\n    }) / 2,\n    marginRight: theme.fn.size({\n      size,\n      sizes: THUMB_SIZES\n    }) / 2,\n    outline: 0,\n    [`&:focus .${getRef(\"sliderThumb\")}`]: {\n      outline: \"none\",\n      boxShadow: theme.focusRing === \"always\" || theme.focusRing === \"auto\" ? `0 0 0 2px ${theme.colorScheme === \"dark\" ? theme.colors.dark[9] : theme.white}, 0 0 0 4px ${theme.colors[theme.primaryColor][theme.colorScheme === \"dark\" ? 7 : 5]}` : void 0\n    },\n    [`&:focus:not(:focus-visible) .${getRef(\"sliderThumb\")}`]: {\n      boxShadow: theme.focusRing === \"auto\" || theme.focusRing === \"never\" ? \"none\" : void 0\n    }\n  },\n  sliderOverlay: {\n    position: \"absolute\",\n    boxSizing: \"border-box\",\n    top: 0,\n    bottom: 0,\n    left: -theme.fn.size({\n      size,\n      sizes: THUMB_SIZES\n    }) / 2 - 1,\n    right: -theme.fn.size({\n      size,\n      sizes: THUMB_SIZES\n    }) / 2 - 1,\n    borderRadius: 1e3\n  }\n}));\nexport default useStyles;","map":{"version":3,"sources":["../../../src/ColorPicker/ColorSlider/ColorSlider.styles.ts"],"names":[],"mappings":";;AAEA,IAAA,SAAA,GAAe,YAAY,CAAC,CAAC,KAAD,EAAQ;AAAE,EAAA;AAAF,CAAR,EAAkB,MAAlB,MAA8B;AACxD,EAAA,WAAW,EAAE;AACX,IAAA,GAAG,EAAE,MAAM,CAAC,aAAD;AADA,GAD2C;AAIxD,EAAA,MAAM,EAAE;AACN,IAAA,QAAQ,EAAE,UADJ;AAEN,IAAA,MAAM,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAK,EAAE;AAAf,KAAd,IAA8C,CAFhD;AAGN,IAAA,SAAS,EAAE,YAHL;AAIN,IAAA,UAAU,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAK,EAAE;AAAf,KAAd,IAA8C,CAJpD;AAKN,IAAA,WAAW,EAAE,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAK,EAAE;AAAf,KAAd,IAA8C,CALrD;AAMN,IAAA,OAAO,EAAE,CANH;AAON,KAAE,YAAW,MAAM,CAAC,aAAD,CAAgB,EAAnC,GAAuC;AACrC,MAAA,OAAO,EAAE,MAD4B;AAErC,MAAA,SAAS,EAAE,KAAK,CAAC,SAAN,KAAoB,QAApB,IAAgC,KAAK,CAAC,SAAN,KAAoB,MAApD,GAA8D,aAAY,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,KAAK,CAAC,MAAN,CAAa,IAAb,CAAkB,CAAlB,CAA/B,GAAsD,KAAK,CAAC,KAAM,eAAc,KAAK,CAAC,MAAN,CAAa,KAAK,CAAC,YAAnB,EAAiC,KAAK,CAAC,WAAN,KAAsB,MAAtB,GAA+B,CAA/B,GAAmC,CAApE,CAAuE,EAAjO,GAAqO,KAAK;AAFhN,KAPjC;AAWN,KAAE,gCAA+B,MAAM,CAAC,aAAD,CAAgB,EAAvD,GAA2D;AACzD,MAAA,SAAS,EAAE,KAAK,CAAC,SAAN,KAAoB,MAApB,IAA8B,KAAK,CAAC,SAAN,KAAoB,OAAlD,GAA4D,MAA5D,GAAqE,KAAK;AAD5B;AAXrD,GAJgD;AAmBxD,EAAA,aAAa,EAAE;AACb,IAAA,QAAQ,EAAE,UADG;AAEb,IAAA,SAAS,EAAE,YAFE;AAGb,IAAA,GAAG,EAAE,CAHQ;AAIb,IAAA,MAAM,EAAE,CAJK;AAKb,IAAA,IAAI,EAAE,CAAC,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAK,EAAE;AAAf,KAAd,CAAD,GAA+C,CAA/C,GAAmD,CAL5C;AAMb,IAAA,KAAK,EAAE,CAAC,KAAK,CAAC,EAAN,CAAS,IAAT,CAAc;AAAE,MAAA,IAAF;AAAQ,MAAA,KAAK,EAAE;AAAf,KAAd,CAAD,GAA+C,CAA/C,GAAmD,CAN7C;AAOb,IAAA,YAAY,EAAE;AAPD;AAnByC,CAA9B,CAAD,CAA3B","sourcesContent":["import { createStyles, MantineSize } from '@mantine/styles';\n\nimport { THUMB_SIZES } from '../Thumb/Thumb.styles';\n\ninterface ColorSliderStyles {\n  size: MantineSize;\n}\n\nexport default createStyles((theme, { size }: ColorSliderStyles, getRef) => ({\n  sliderThumb: {\n    ref: getRef('sliderThumb'),\n  },\n\n  slider: {\n    position: 'relative',\n    height: theme.fn.size({ size, sizes: THUMB_SIZES }) + 2,\n    boxSizing: 'border-box',\n    marginLeft: theme.fn.size({ size, sizes: THUMB_SIZES }) / 2,\n    marginRight: theme.fn.size({ size, sizes: THUMB_SIZES }) / 2,\n    outline: 0,\n\n    [`&:focus .${getRef('sliderThumb')}`]: {\n      outline: 'none',\n      boxShadow:\n        theme.focusRing === 'always' || theme.focusRing === 'auto'\n          ? `0 0 0 2px ${\n              theme.colorScheme === 'dark' ? theme.colors.dark[9] : theme.white\n            }, 0 0 0 4px ${theme.colors[theme.primaryColor][theme.colorScheme === 'dark' ? 7 : 5]}`\n          : undefined,\n    },\n\n    [`&:focus:not(:focus-visible) .${getRef('sliderThumb')}`]: {\n      boxShadow: theme.focusRing === 'auto' || theme.focusRing === 'never' ? 'none' : undefined,\n    },\n  },\n\n  sliderOverlay: {\n    position: 'absolute',\n    boxSizing: 'border-box',\n    top: 0,\n    bottom: 0,\n    left: -theme.fn.size({ size, sizes: THUMB_SIZES }) / 2 - 1,\n    right: -theme.fn.size({ size, sizes: THUMB_SIZES }) / 2 - 1,\n    borderRadius: 1000,\n  },\n}));\n"]},"metadata":{},"sourceType":"module"}