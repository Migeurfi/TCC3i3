{"ast":null,"code":"import React from 'react';\nimport { getSafeId } from '@mantine/utils';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { TabsContextProvider } from './Tabs.context.js';\nimport { TABS_ERRORS } from './Tabs.errors.js';\n\nfunction TabsProvider({\n  defaultValue,\n  value,\n  onTabChange,\n  orientation,\n  children,\n  loop,\n  id,\n  activateTabWithKeyboard,\n  allowTabDeactivation,\n  variant,\n  color,\n  radius,\n  inverted\n}) {\n  const uid = useId(id);\n  const [_value, onChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange: onTabChange\n  });\n  return /* @__PURE__ */React.createElement(TabsContextProvider, {\n    value: {\n      value: _value,\n      orientation,\n      id: uid,\n      loop,\n      activateTabWithKeyboard,\n      getTabId: getSafeId(`${uid}-tab`, TABS_ERRORS.value),\n      getPanelId: getSafeId(`${uid}-panel`, TABS_ERRORS.value),\n      onTabChange: onChange,\n      allowTabDeactivation,\n      variant,\n      color,\n      radius,\n      inverted\n    }\n  }, children);\n}\n\nTabsProvider.displayName = \"@mantine/core/TabsProvider\";\nexport { TabsProvider };","map":{"version":3,"sources":["../../src/Tabs/TabsProvider.tsx"],"names":[],"mappings":";;;;;;AAKO,SAAS,YAAT,CAAsB;AAC3B,EAAA,YAD2B;AAE3B,EAAA,KAF2B;AAG3B,EAAA,WAH2B;AAI3B,EAAA,WAJ2B;AAK3B,EAAA,QAL2B;AAM3B,EAAA,IAN2B;AAO3B,EAAA,EAP2B;AAQ3B,EAAA,uBAR2B;AAS3B,EAAA,oBAT2B;AAU3B,EAAA,OAV2B;AAW3B,EAAA,KAX2B;AAY3B,EAAA,MAZ2B;AAa3B,EAAA;AAb2B,CAAtB,EAcJ;AACD,QAAM,GAAG,GAAG,KAAK,CAAC,EAAD,CAAjB;AACA,QAAM,CAAC,MAAD,EAAS,QAAT,IAAqB,eAAe,CAAC;AACzC,IAAA,KADyC;AAEzC,IAAA,YAFyC;AAGzC,IAAA,UAAU,EAAE,IAH6B;AAIzC,IAAA,QAAQ,EAAE;AAJ+B,GAAD,CAA1C;AAMA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,mBAApB,EAAyC;AAC9D,IAAA,KAAK,EAAE;AACL,MAAA,KAAK,EAAE,MADF;AAEL,MAAA,WAFK;AAGL,MAAA,EAAE,EAAE,GAHC;AAIL,MAAA,IAJK;AAKL,MAAA,uBALK;AAML,MAAA,QAAQ,EAAE,SAAS,CAAE,GAAE,GAAI,MAAR,EAAe,WAAW,CAAC,KAA3B,CANd;AAOL,MAAA,UAAU,EAAE,SAAS,CAAE,GAAE,GAAI,QAAR,EAAiB,WAAW,CAAC,KAA7B,CAPhB;AAQL,MAAA,WAAW,EAAE,QARR;AASL,MAAA,oBATK;AAUL,MAAA,OAVK;AAWL,MAAA,KAXK;AAYL,MAAA,MAZK;AAaL,MAAA;AAbK;AADuD,GAAzC,EAgBpB,QAhBoB,CAAvB;AAiBD;;AACD,YAAY,CAAC,WAAb,GAA2B,4BAA3B","sourcesContent":["import React from 'react';\nimport { getSafeId } from '@mantine/utils';\nimport { useUncontrolled, useId } from '@mantine/hooks';\nimport { MantineColor, MantineNumberSize } from '@mantine/styles';\nimport { TabsContextProvider } from './Tabs.context';\nimport { TABS_ERRORS } from './Tabs.errors';\nimport { TabsValue, TabsOrientation, TabsVariant } from './Tabs.types';\n\nexport interface TabsProviderProps {\n  /** Default value for uncontrolled component */\n  defaultValue?: TabsValue;\n\n  /** Value for controlled component */\n  value?: TabsValue;\n\n  /** Callback for controlled component */\n  onTabChange?(value: TabsValue): void;\n\n  /** Tabs orientation, vertical or horizontal */\n  orientation?: TabsOrientation;\n\n  /** Base id, used to generate ids that connect labels with controls, by default generated randomly */\n  id?: string;\n\n  /** Determines whether arrow key presses should loop though items (first to last and last to first) */\n  loop?: boolean;\n\n  /** Determines whether tab should be activated with arrow key press, defaults to true */\n  activateTabWithKeyboard?: boolean;\n\n  /** Determines whether tab can be deactivated, defaults to false */\n  allowTabDeactivation?: boolean;\n\n  /** Tabs content */\n  children: React.ReactNode;\n\n  /** Controls component visuals */\n  variant?: TabsVariant;\n\n  /** Key of theme.colors */\n  color?: MantineColor;\n\n  /** Tabs border-radius from theme.radius or number ti set value from theme, defaults to theme.defaultRadius */\n  radius?: MantineNumberSize;\n\n  /** Determines whether tabs should have inverted styles */\n  inverted?: boolean;\n}\n\nexport function TabsProvider({\n  defaultValue,\n  value,\n  onTabChange,\n  orientation,\n  children,\n  loop,\n  id,\n  activateTabWithKeyboard,\n  allowTabDeactivation,\n  variant,\n  color,\n  radius,\n  inverted,\n}: TabsProviderProps) {\n  const uid = useId(id);\n\n  const [_value, onChange] = useUncontrolled<TabsValue>({\n    value,\n    defaultValue,\n    finalValue: null,\n    onChange: onTabChange,\n  });\n\n  return (\n    <TabsContextProvider\n      value={{\n        value: _value,\n        orientation,\n        id: uid,\n        loop,\n        activateTabWithKeyboard,\n        getTabId: getSafeId(`${uid}-tab`, TABS_ERRORS.value),\n        getPanelId: getSafeId(`${uid}-panel`, TABS_ERRORS.value),\n        onTabChange: onChange,\n        allowTabDeactivation,\n        variant,\n        color,\n        radius,\n        inverted,\n      }}\n    >\n      {children}\n    </TabsContextProvider>\n  );\n}\n\nTabsProvider.displayName = '@mantine/core/TabsProvider';\n"]},"metadata":{},"sourceType":"module"}