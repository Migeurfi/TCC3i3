{"ast":null,"code":"import React, { createContext, useContext } from 'react';\nimport { DEFAULT_THEME } from './default-theme.js';\nimport { GlobalStyles } from './GlobalStyles.js';\nimport { MantineCssVariables } from './MantineCssVariables.js';\nimport { mergeThemeWithFunctions } from './utils/merge-theme/merge-theme.js';\nimport { filterProps } from './utils/filter-props/filter-props.js';\nimport { NormalizeCSS } from './NormalizeCSS.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nconst MantineProviderContext = createContext({\n  theme: DEFAULT_THEME\n});\n\nfunction useMantineTheme() {\n  var _a;\n\n  return ((_a = useContext(MantineProviderContext)) == null ? void 0 : _a.theme) || DEFAULT_THEME;\n}\n\nfunction useMantineProviderStyles(component) {\n  const theme = useMantineTheme();\n\n  const getStyles = name => {\n    var _a, _b;\n\n    return {\n      styles: ((_a = theme.components[name]) == null ? void 0 : _a.styles) || {},\n      classNames: ((_b = theme.components[name]) == null ? void 0 : _b.classNames) || {}\n    };\n  };\n\n  if (Array.isArray(component)) {\n    return component.map(getStyles);\n  }\n\n  return [getStyles(component)];\n}\n\nfunction useMantineEmotionCache() {\n  var _a;\n\n  return (_a = useContext(MantineProviderContext)) == null ? void 0 : _a.emotionCache;\n}\n\nfunction useComponentDefaultProps(component, defaultProps, props) {\n  var _a;\n\n  const theme = useMantineTheme();\n  const contextProps = (_a = theme.components[component]) == null ? void 0 : _a.defaultProps;\n  return __spreadValues(__spreadValues(__spreadValues({}, defaultProps), contextProps), filterProps(props));\n}\n\nfunction MantineProvider({\n  theme,\n  emotionCache,\n  withNormalizeCSS = false,\n  withGlobalStyles = false,\n  withCSSVariables = false,\n  inherit = false,\n  children\n}) {\n  const ctx = useContext(MantineProviderContext);\n  const mergedTheme = mergeThemeWithFunctions(DEFAULT_THEME, inherit ? __spreadValues(__spreadValues({}, ctx.theme), theme) : theme);\n  return /* @__PURE__ */React.createElement(MantineProviderContext.Provider, {\n    value: {\n      theme: mergedTheme,\n      emotionCache\n    }\n  }, withNormalizeCSS && /* @__PURE__ */React.createElement(NormalizeCSS, null), withGlobalStyles && /* @__PURE__ */React.createElement(GlobalStyles, {\n    theme: mergedTheme\n  }), withCSSVariables && /* @__PURE__ */React.createElement(MantineCssVariables, {\n    theme: mergedTheme\n  }), children);\n}\n\nMantineProvider.displayName = \"@mantine/core/MantineProvider\";\nexport { MantineProvider, useComponentDefaultProps, useMantineEmotionCache, useMantineProviderStyles, useMantineTheme };","map":{"version":3,"sources":["../../src/theme/MantineProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { createContext, useContext } from 'react';\nimport type { EmotionCache } from '@emotion/cache';\nimport { DEFAULT_THEME } from './default-theme';\nimport { GlobalStyles } from './GlobalStyles';\nimport { MantineCssVariables } from './MantineCssVariables';\nimport type { MantineThemeOverride, MantineTheme } from './types';\nimport { mergeThemeWithFunctions } from './utils/merge-theme/merge-theme';\nimport { filterProps } from './utils/filter-props/filter-props';\nimport { NormalizeCSS } from './NormalizeCSS';\n\ninterface MantineProviderContextType {\n  theme: MantineTheme;\n  emotionCache?: EmotionCache;\n}\n\nconst MantineProviderContext = createContext<MantineProviderContextType>({\n  theme: DEFAULT_THEME,\n});\n\nexport function useMantineTheme() {\n  return useContext(MantineProviderContext)?.theme || DEFAULT_THEME;\n}\n\nexport function useMantineProviderStyles(component: string | string[]) {\n  const theme = useMantineTheme();\n\n  const getStyles = (name: string) => ({\n    styles: theme.components[name]?.styles || {},\n    classNames: theme.components[name]?.classNames || {},\n  });\n\n  if (Array.isArray(component)) {\n    return component.map(getStyles);\n  }\n\n  return [getStyles(component)];\n}\n\nexport function useMantineEmotionCache() {\n  return useContext(MantineProviderContext)?.emotionCache;\n}\n\nexport function useComponentDefaultProps<T extends Record<string, any>>(\n  component: string,\n  defaultProps: Partial<T>,\n  props: T\n): T {\n  const theme = useMantineTheme();\n  const contextProps = theme.components[component]?.defaultProps;\n  return { ...defaultProps, ...contextProps, ...filterProps(props) };\n}\n\nexport interface MantineProviderProps {\n  theme?: MantineThemeOverride;\n  emotionCache?: EmotionCache;\n  withNormalizeCSS?: boolean;\n  withGlobalStyles?: boolean;\n  withCSSVariables?: boolean;\n  children: React.ReactNode;\n  inherit?: boolean;\n}\n\nexport function MantineProvider({\n  theme,\n  emotionCache,\n  withNormalizeCSS = false,\n  withGlobalStyles = false,\n  withCSSVariables = false,\n  inherit = false,\n  children,\n}: MantineProviderProps) {\n  const ctx = useContext(MantineProviderContext);\n  const mergedTheme = mergeThemeWithFunctions(\n    DEFAULT_THEME,\n    inherit ? { ...ctx.theme, ...theme } : theme\n  );\n\n  return (\n    <MantineProviderContext.Provider value={{ theme: mergedTheme, emotionCache }}>\n      {withNormalizeCSS && <NormalizeCSS />}\n      {withGlobalStyles && <GlobalStyles theme={mergedTheme} />}\n      {withCSSVariables && <MantineCssVariables theme={mergedTheme} />}\n      {children}\n    </MantineProviderContext.Provider>\n  );\n}\n\nMantineProvider.displayName = '@mantine/core/MantineProvider';\n"]},"metadata":{},"sourceType":"module"}