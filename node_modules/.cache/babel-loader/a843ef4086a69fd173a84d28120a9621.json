{"ast":null,"code":"var _jsxFileName = \"/home/miguer/Documents/dev/tcc/mqtt-client-React/src/components/Hook/Connection.js\";\nimport React from \"react\";\nimport { Card, Button, Form, Input, Row, Col } from \"antd\";\n\nconst Connection = ({\n  connect,\n  disconnect,\n  connectBtn\n}) => {\n  const [form] = Form.useForm();\n  const record = {\n    host: \"192.168.0.101\",\n    clientId: `TCCPLANTA`,\n    port: 9001\n  };\n\n  const onFinish = values => {\n    const {\n      host,\n      clientId,\n      port,\n      username,\n      password\n    } = values;\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: \"MQTT\",\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: \"WillMsg\",\n        payload: \"ConexÃ£o Encerrada inesperadamente\",\n        qos: 0,\n        retain: false\n      },\n      rejectUnauthorized: false\n    };\n    options.clientId = clientId;\n    options.username = username;\n    options.password = password;\n    connect(url, options);\n  };\n\n  const handleConnect = () => {\n    form.submit();\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  const ConnectionForm = /*#__PURE__*/React.createElement(Form, {\n    style: {\n      backgroundImage: \"linear-gradient(to bottom right,#389e0d,#95de64)\",\n      border: \"none\"\n    },\n    layout: \"vertical\",\n    name: \"basic\",\n    form: form,\n    initialValues: record,\n    onFinish: onFinish,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    gutter: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    style: {\n      backgrou\n    },\n    label: \"Host\",\n    name: \"host\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Porta\",\n    name: \"port\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Cliente\",\n    name: \"clientId\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Nome de Usuario\",\n    name: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    span: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Item, {\n    label: \"Senha\",\n    name: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  })))));\n  return /*#__PURE__*/React.createElement(Card, {\n    style: {\n      backgroundImage: \"linear-gradient(to bottom right,#389e0d,#95de64)\",\n      border: \"none\"\n    },\n    title: \"Conex\\xE3o MQTT\",\n    actions: [/*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      style: {\n        background: \"#78a52d\",\n        border: \"none\"\n      },\n      onClick: handleConnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }, connectBtn), /*#__PURE__*/React.createElement(Button, {\n      danger: true,\n      onClick: handleDisconnect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }\n    }, \"Disconnect\")],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, ConnectionForm);\n};\n\nexport default Connection;","map":{"version":3,"sources":["/home/miguer/Documents/dev/tcc/mqtt-client-React/src/components/Hook/Connection.js"],"names":["React","Card","Button","Form","Input","Row","Col","Connection","connect","disconnect","connectBtn","form","useForm","record","host","clientId","port","onFinish","values","username","password","url","options","keepalive","protocolId","protocolVersion","clean","reconnectPeriod","connectTimeout","will","topic","payload","qos","retain","rejectUnauthorized","handleConnect","submit","handleDisconnect","ConnectionForm","backgroundImage","border","backgrou","background"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Card, Button, Form, Input, Row, Col } from \"antd\";\n\nconst Connection = ({ connect, disconnect, connectBtn }) => {\n  const [form] = Form.useForm();\n  const record = {\n    host: \"192.168.0.101\",\n    clientId: `TCCPLANTA`,\n    port: 9001,\n  };\n  const onFinish = (values) => {\n    const { host, clientId, port, username, password } = values;\n    const url = `ws://${host}:${port}/mqtt`;\n    const options = {\n      keepalive: 30,\n      protocolId: \"MQTT\",\n      protocolVersion: 4,\n      clean: true,\n      reconnectPeriod: 1000,\n      connectTimeout: 30 * 1000,\n      will: {\n        topic: \"WillMsg\",\n        payload: \"ConexÃ£o Encerrada inesperadamente\",\n        qos: 0,\n        retain: false,\n      },\n      rejectUnauthorized: false,\n    };\n    options.clientId = clientId;\n    options.username = username;\n    options.password = password;\n    connect(url, options);\n  };\n\n  const handleConnect = () => {\n    form.submit();\n  };\n\n  const handleDisconnect = () => {\n    disconnect();\n  };\n\n  const ConnectionForm = (\n    <Form\n      style={{\n        backgroundImage: \"linear-gradient(to bottom right,#389e0d,#95de64)\",\n        border: \"none\",\n      }}\n      layout=\"vertical\"\n      name=\"basic\"\n      form={form}\n      initialValues={record}\n      onFinish={onFinish}\n    >\n      <Row gutter={20}>\n        <Col span={8}>\n          <Form.Item style={{backgrou}}label=\"Host\" name=\"host\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Porta\" name=\"port\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Cliente\" name=\"clientId\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Nome de Usuario\" name=\"username\">\n            <Input />\n          </Form.Item>\n        </Col>\n        <Col span={8}>\n          <Form.Item label=\"Senha\" name=\"password\">\n            <Input />\n          </Form.Item>\n        </Col>\n      </Row>\n    </Form>\n  );\n\n  return (\n    <Card\n      style={{\n        backgroundImage: \"linear-gradient(to bottom right,#389e0d,#95de64)\",\n        border: \"none\",\n      }}\n      title=\"ConexÃ£o MQTT\"\n      actions={[\n        <Button\n          type=\"primary\"\n          style={{ background: \"#78a52d\", border: \"none\" }}\n          onClick={handleConnect}\n        >\n          {connectBtn}\n        </Button>,\n        <Button danger onClick={handleDisconnect}>\n          Disconnect\n        </Button>,\n      ]}\n    >\n      {ConnectionForm}\n    </Card>\n  );\n};\n\nexport default Connection;\n"]},"metadata":{},"sourceType":"module"}