{"ast":null,"code":"var _jsxFileName = \"/home/miguer/Documents/dev/tcc/mqtt-client-React/src/components/Notify/Notification.js\";\nimport React, { useState } from \"react\";\n\nconst Notification = props => {\n  const [exit, setExit] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [intervalID, setIntervalID] = useState(null);\n\n  const handleStartTimer = () => {\n    const id = setInterval(() => {\n      setWidth(prev => {\n        if (prev < 100) {\n          return prev + 0.5;\n        }\n\n        clearInterval(id);\n        return prev;\n      });\n    }, 20);\n    setIntervalID(id);\n  };\n\n  const handlePauseTimer = () => {\n    clearInterval(intervalID);\n  };\n\n  const handleCloseNotification = () => {\n    handlePauseTimer();\n    setExit(true);\n    setTimeout(() => {\n      props.dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        id: props.id\n      });\n    }, 400);\n  };\n\n  React.useEffect(() => {\n    if (width === 100) {\n      // Close notification\n      handleCloseNotification();\n    }\n  }, [width]);\n  React.useEffect(() => {\n    handleStartTimer();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: handlePauseTimer,\n    onMouseLeave: handleStartTimer,\n    className: `notification-item ${props.type === \"SUCCESS\" ? \"success\" : \"error\"} ${exit ? \"exit\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, props.message), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bar\",\n    style: {\n      width: `${width}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Notification;","map":{"version":3,"sources":["/home/miguer/Documents/dev/tcc/mqtt-client-React/src/components/Notify/Notification.js"],"names":["React","useState","Notification","props","exit","setExit","width","setWidth","intervalID","setIntervalID","handleStartTimer","id","setInterval","prev","clearInterval","handlePauseTimer","handleCloseNotification","setTimeout","dispatch","type","useEffect","message"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,KAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAMS,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,EAAE,GAAGC,WAAW,CAAC,MAAM;AAC3BL,MAAAA,QAAQ,CAAEM,IAAD,IAAU;AACjB,YAAIA,IAAI,GAAG,GAAX,EAAgB;AACd,iBAAOA,IAAI,GAAG,GAAd;AACD;;AAEDC,QAAAA,aAAa,CAACH,EAAD,CAAb;AACA,eAAOE,IAAP;AACD,OAPO,CAAR;AAQD,KATqB,EASnB,EATmB,CAAtB;AAWAJ,IAAAA,aAAa,CAACE,EAAD,CAAb;AACD,GAbD;;AAeA,QAAMI,gBAAgB,GAAG,MAAM;AAC7BD,IAAAA,aAAa,CAACN,UAAD,CAAb;AACD,GAFD;;AAIA,QAAMQ,uBAAuB,GAAG,MAAM;AACpCD,IAAAA,gBAAgB;AAChBV,IAAAA,OAAO,CAAC,IAAD,CAAP;AACAY,IAAAA,UAAU,CAAC,MAAM;AACfd,MAAAA,KAAK,CAACe,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAE,qBADO;AAEbR,QAAAA,EAAE,EAAER,KAAK,CAACQ;AAFG,OAAf;AAID,KALS,EAKP,GALO,CAAV;AAMD,GATD;;AAWAX,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAId,KAAK,KAAK,GAAd,EAAmB;AACjB;AACAU,MAAAA,uBAAuB;AACxB;AACF,GALD,EAKG,CAACV,KAAD,CALH;AAOAN,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpBV,IAAAA,gBAAgB;AACjB,GAFD,EAEG,EAFH;AAIA,sBACE;AACE,IAAA,YAAY,EAAEK,gBADhB;AAEE,IAAA,YAAY,EAAEL,gBAFhB;AAGE,IAAA,SAAS,EAAG,qBACVP,KAAK,CAACgB,IAAN,KAAe,SAAf,GAA2B,SAA3B,GAAuC,OACxC,IAAGf,IAAI,GAAG,MAAH,GAAY,EAAG,EALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAID,KAAK,CAACkB,OAAV,CAPF,eAQE;AAAK,IAAA,SAAS,EAAE,KAAhB;AAAuB,IAAA,KAAK,EAAE;AAAEf,MAAAA,KAAK,EAAG,GAAEA,KAAM;AAAlB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF;AAYD,CA1DD;;AA4DA,eAAeJ,YAAf","sourcesContent":["import React, { useState } from \"react\";\n\nconst Notification = (props) => {\n  const [exit, setExit] = useState(false);\n  const [width, setWidth] = useState(0);\n  const [intervalID, setIntervalID] = useState(null);\n\n  const handleStartTimer = () => {\n    const id = setInterval(() => {\n      setWidth((prev) => {\n        if (prev < 100) {\n          return prev + 0.5;\n        }\n\n        clearInterval(id);\n        return prev;\n      });\n    }, 20);\n\n    setIntervalID(id);\n  };\n\n  const handlePauseTimer = () => {\n    clearInterval(intervalID);\n  };\n\n  const handleCloseNotification = () => {\n    handlePauseTimer();\n    setExit(true);\n    setTimeout(() => {\n      props.dispatch({\n        type: \"REMOVE_NOTIFICATION\",\n        id: props.id,\n      });\n    }, 400);\n  };\n\n  React.useEffect(() => {\n    if (width === 100) {\n      // Close notification\n      handleCloseNotification();\n    }\n  }, [width]);\n\n  React.useEffect(() => {\n    handleStartTimer();\n  }, []);\n\n  return (\n    <div\n      onMouseEnter={handlePauseTimer}\n      onMouseLeave={handleStartTimer}\n      className={`notification-item ${\n        props.type === \"SUCCESS\" ? \"success\" : \"error\"\n      } ${exit ? \"exit\" : \"\"}`}\n    >\n      <p>{props.message}</p>\n      <div className={\"bar\"} style={{ width: `${width}%` }} />\n    </div>\n  );\n};\n\nexport default Notification;\n"]},"metadata":{},"sourceType":"module"}