{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport useStyles from './Text.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  variant: \"text\"\n};\n\nconst _Text = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Text\", defaultProps, props),\n        {\n    className,\n    size,\n    weight,\n    transform,\n    color,\n    align,\n    variant,\n    lineClamp,\n    gradient,\n    inline,\n    inherit,\n    underline,\n    strikethrough,\n    italic,\n    classNames,\n    styles,\n    unstyled,\n    span\n  } = _a,\n        others = __objRest(_a, [\"className\", \"size\", \"weight\", \"transform\", \"color\", \"align\", \"variant\", \"lineClamp\", \"gradient\", \"inline\", \"inherit\", \"underline\", \"strikethrough\", \"italic\", \"classNames\", \"styles\", \"unstyled\", \"span\"]);\n\n  const {\n    classes,\n    cx\n  } = useStyles({\n    variant,\n    color,\n    size,\n    lineClamp,\n    inline,\n    inherit,\n    underline,\n    strikethrough,\n    italic,\n    weight,\n    transform,\n    align,\n    gradient\n  }, {\n    unstyled,\n    name: \"Text\"\n  });\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    ref,\n    className: cx(classes.root, {\n      [classes.gradient]: variant === \"gradient\"\n    }, className),\n    component: span ? \"span\" : \"div\"\n  }, others));\n});\n\n_Text.displayName = \"@mantine/core/Text\";\nconst Text = createPolymorphicComponent(_Text);\nexport { Text, _Text };","map":{"version":3,"sources":["../../src/Text/Text.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport {\n  DefaultProps,\n  MantineGradient,\n  useComponentDefaultProps,\n  MantineColor,\n  MantineNumberSize,\n} from '@mantine/styles';\nimport { createPolymorphicComponent } from '@mantine/utils';\nimport { Box } from '../Box';\nimport useStyles from './Text.styles';\n\nexport interface TextProps extends DefaultProps {\n  /** Text content */\n  children?: React.ReactNode;\n\n  /** Key of theme.fontSizes or number to set font-size in px */\n  size?: MantineNumberSize;\n\n  /** Key of theme.colors or any valid CSS color */\n  color?: 'dimmed' | MantineColor;\n\n  /** Sets font-weight css property */\n  weight?: React.CSSProperties['fontWeight'];\n\n  /** Sets text-transform css property */\n  transform?: React.CSSProperties['textTransform'];\n\n  /** Sets text-align css property */\n  align?: React.CSSProperties['textAlign'];\n\n  /** Link or text variant */\n  variant?: 'text' | 'link' | 'gradient';\n\n  /** CSS -webkit-line-clamp property */\n  lineClamp?: number;\n\n  /** Sets line-height to 1 for centering */\n  inline?: boolean;\n\n  /** Underline the text */\n  underline?: boolean;\n\n  /** Add strikethrough styles */\n  strikethrough?: boolean;\n\n  /** Adds font-style: italic style */\n  italic?: boolean;\n\n  /** Inherit font properties from parent element */\n  inherit?: boolean;\n\n  /** Controls gradient settings in gradient variant only */\n  gradient?: MantineGradient;\n\n  /** Shorthand for component=\"span\" */\n  span?: boolean;\n}\n\nconst defaultProps: Partial<TextProps> = {\n  variant: 'text',\n};\n\nexport const _Text = forwardRef<HTMLDivElement, TextProps>((props, ref) => {\n  const {\n    className,\n    size,\n    weight,\n    transform,\n    color,\n    align,\n    variant,\n    lineClamp,\n    gradient,\n    inline,\n    inherit,\n    underline,\n    strikethrough,\n    italic,\n    classNames,\n    styles,\n    unstyled,\n    span,\n    ...others\n  } = useComponentDefaultProps('Text', defaultProps, props);\n\n  const { classes, cx } = useStyles(\n    {\n      variant,\n      color,\n      size,\n      lineClamp,\n      inline,\n      inherit,\n      underline,\n      strikethrough,\n      italic,\n      weight,\n      transform,\n      align,\n      gradient,\n    },\n    { unstyled, name: 'Text' }\n  );\n\n  return (\n    <Box\n      ref={ref}\n      className={cx(classes.root, { [classes.gradient]: variant === 'gradient' }, className)}\n      component={span ? 'span' : 'div'}\n      {...others}\n    />\n  );\n});\n\n_Text.displayName = '@mantine/core/Text';\n\nexport const Text = createPolymorphicComponent<'div', TextProps>(_Text);\n"]},"metadata":{},"sourceType":"module"}