{"ast":null,"code":"import { useUncontrolled, useDidUpdate } from '@mantine/hooks';\nimport { useFloating, size, offset, shift, flip } from '@floating-ui/react-dom-interactions';\nimport { useFloatingAutoUpdate } from '../Floating/use-floating-auto-update.js';\n\nfunction getPopoverMiddlewares(options) {\n  const middlewares = [offset(options.offset)];\n\n  if (options.middlewares.shift) {\n    middlewares.push(shift());\n  }\n\n  if (options.middlewares.flip) {\n    middlewares.push(flip());\n  }\n\n  return middlewares;\n}\n\nfunction usePopover(options) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange\n  });\n\n  const onClose = () => {\n    var _a;\n\n    (_a = options.onClose) == null ? void 0 : _a.call(options);\n    setOpened(false);\n  };\n\n  const onToggle = () => {\n    var _a, _b;\n\n    if (_opened) {\n      (_a = options.onClose) == null ? void 0 : _a.call(options);\n      setOpened(false);\n    } else {\n      (_b = options.onOpen) == null ? void 0 : _b.call(options);\n      setOpened(true);\n    }\n  };\n\n  const floating = useFloating({\n    placement: options.position,\n    middleware: [...getPopoverMiddlewares(options), ...(options.width === \"target\" ? [size({\n      apply({\n        rects\n      }) {\n        var _a, _b;\n\n        Object.assign((_b = (_a = floating.refs.floating.current) == null ? void 0 : _a.style) != null ? _b : {}, {\n          width: `${rects.reference.width}px`\n        });\n      }\n\n    })] : [])]\n  });\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    positionDependencies: options.positionDependencies,\n    floating\n  });\n  useDidUpdate(() => {\n    var _a;\n\n    (_a = options.onPositionChange) == null ? void 0 : _a.call(options, floating.placement);\n  }, [floating.placement]);\n  return {\n    floating,\n    controlled: typeof options.opened === \"boolean\",\n    opened: _opened,\n    onClose,\n    onToggle\n  };\n}\n\nexport { usePopover };","map":{"version":3,"sources":["../../src/Popover/use-popover.ts"],"names":[],"mappings":"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","sourcesContent":["import { useDidUpdate, useUncontrolled } from '@mantine/hooks';\nimport {\n  useFloating,\n  shift,\n  flip,\n  offset,\n  size,\n  Middleware,\n} from '@floating-ui/react-dom-interactions';\nimport { FloatingPosition, useFloatingAutoUpdate } from '../Floating';\nimport { PopoverWidth, PopoverMiddlewares } from './Popover.types';\n\ninterface UsePopoverOptions {\n  offset: number;\n  position: FloatingPosition;\n  positionDependencies: any[];\n  onPositionChange?(position: FloatingPosition): void;\n  opened: boolean;\n  defaultOpened: boolean;\n  onChange(opened: boolean): void;\n  onClose?(): void;\n  onOpen?(): void;\n  width: PopoverWidth;\n  middlewares: PopoverMiddlewares;\n}\n\nfunction getPopoverMiddlewares(options: UsePopoverOptions) {\n  const middlewares: Middleware[] = [offset(options.offset)];\n\n  if (options.middlewares.shift) {\n    middlewares.push(shift());\n  }\n\n  if (options.middlewares.flip) {\n    middlewares.push(flip());\n  }\n\n  return middlewares;\n}\n\nexport function usePopover(options: UsePopoverOptions) {\n  const [_opened, setOpened] = useUncontrolled({\n    value: options.opened,\n    defaultValue: options.defaultOpened,\n    finalValue: false,\n    onChange: options.onChange,\n  });\n\n  const onClose = () => {\n    options.onClose?.();\n    setOpened(false);\n  };\n\n  const onToggle = () => {\n    if (_opened) {\n      options.onClose?.();\n      setOpened(false);\n    } else {\n      options.onOpen?.();\n      setOpened(true);\n    }\n  };\n\n  const floating = useFloating({\n    placement: options.position,\n    middleware: [\n      ...getPopoverMiddlewares(options),\n      ...(options.width === 'target'\n        ? [\n            size({\n              apply({ rects }) {\n                Object.assign(floating.refs.floating.current?.style ?? {}, {\n                  width: `${rects.reference.width}px`,\n                });\n              },\n            }),\n          ]\n        : []),\n    ],\n  });\n\n  useFloatingAutoUpdate({\n    opened: options.opened,\n    positionDependencies: options.positionDependencies,\n    floating,\n  });\n\n  useDidUpdate(() => {\n    options.onPositionChange?.(floating.placement);\n  }, [floating.placement]);\n\n  return {\n    floating,\n    controlled: typeof options.opened === 'boolean',\n    opened: _opened,\n    onClose,\n    onToggle,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}