{"ast":null,"code":"var _jsxFileName = \"/home/miguer/Documents/dev/tcc/mqtt-client-React/src/components/Notify/NotificationsProvider.js\";\nimport React, { createContext, useContext, useReducer, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport Notification from \"./Notification\";\nconst NotificationContext = createContext();\n\nconst NotificationProvider = props => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"ADD_NOTIFICATION\":\n        return [...state, { ...action.payload\n        }];\n\n      case \"REMOVE_NOTIFICATION\":\n        return state.filter(el => el.id !== action.id);\n\n      default:\n        return state;\n    }\n  }, []);\n  return /*#__PURE__*/React.createElement(NotificationContext.Provider, {\n    value: dispatch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"notification-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, state.map(note => {\n    return /*#__PURE__*/React.createElement(Notification, Object.assign({\n      dispatch: dispatch,\n      key: note.id\n    }, note, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 18\n      }\n    }));\n  })), props.children);\n};\n\nexport const useNotification = () => {\n  const dispatch = useContext(NotificationContext);\n  return props => {\n    dispatch({\n      type: \"ADD_NOTIFICATION\",\n      payload: {\n        id: v4(),\n        ...props\n      }\n    });\n  };\n};\nexport default NotificationProvider;","map":{"version":3,"sources":["/home/miguer/Documents/dev/tcc/mqtt-client-React/src/components/Notify/NotificationsProvider.js"],"names":["React","createContext","useContext","useReducer","useState","v4","Notification","NotificationContext","NotificationProvider","props","state","dispatch","action","type","payload","filter","el","id","map","note","children","useNotification"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,UAA3C,EAAuDC,QAAvD,QAAuE,OAAvE;AACA,SAASC,EAAT,QAAmB,MAAnB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AAEA,MAAMC,mBAAmB,GAAGN,aAAa,EAAzC;;AAEA,MAAMO,oBAAoB,GAAIC,KAAD,IAAW;AACtC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,UAAU,CAAC,CAACO,KAAD,EAAQE,MAAR,KAAmB;AACtD,YAAQA,MAAM,CAACC,IAAf;AACE,WAAK,kBAAL;AACE,eAAO,CAAC,GAAGH,KAAJ,EAAW,EAAE,GAAGE,MAAM,CAACE;AAAZ,SAAX,CAAP;;AACF,WAAK,qBAAL;AACE,eAAOJ,KAAK,CAACK,MAAN,CAAcC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUL,MAAM,CAACK,EAAtC,CAAP;;AACF;AACE,eAAOP,KAAP;AANJ;AAQD,GATmC,EASjC,EATiC,CAApC;AAWA,sBACE,oBAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAE,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAU;AACnB,wBAAO,oBAAC,YAAD;AAAc,MAAA,QAAQ,EAAER,QAAxB;AAAkC,MAAA,GAAG,EAAEQ,IAAI,CAACF;AAA5C,OAAoDE,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CADF,EAMGV,KAAK,CAACW,QANT,CADF;AAUD,CAtBD;;AAwBA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAMV,QAAQ,GAAGT,UAAU,CAACK,mBAAD,CAA3B;AAEA,SAAQE,KAAD,IAAW;AAChBE,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAE,kBADC;AAEPC,MAAAA,OAAO,EAAE;AACPG,QAAAA,EAAE,EAAEZ,EAAE,EADC;AAEP,WAAGI;AAFI;AAFF,KAAD,CAAR;AAOD,GARD;AASD,CAZM;AAcP,eAAeD,oBAAf","sourcesContent":["import React, { createContext, useContext, useReducer, useState } from \"react\";\nimport { v4 } from \"uuid\";\nimport Notification from \"./Notification\";\n\nconst NotificationContext = createContext();\n\nconst NotificationProvider = (props) => {\n  const [state, dispatch] = useReducer((state, action) => {\n    switch (action.type) {\n      case \"ADD_NOTIFICATION\":\n        return [...state, { ...action.payload }];\n      case \"REMOVE_NOTIFICATION\":\n        return state.filter((el) => el.id !== action.id);\n      default:\n        return state;\n    }\n  }, []);\n\n  return (\n    <NotificationContext.Provider value={dispatch}>\n      <div className={\"notification-wrapper\"}>\n        {state.map((note) => {\n          return <Notification dispatch={dispatch} key={note.id} {...note} />;\n        })}\n      </div>\n      {props.children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport const useNotification = () => {\n  const dispatch = useContext(NotificationContext);\n\n  return (props) => {\n    dispatch({\n      type: \"ADD_NOTIFICATION\",\n      payload: {\n        id: v4(),\n        ...props,\n      },\n    });\n  };\n};\n\nexport default NotificationProvider;\n"]},"metadata":{},"sourceType":"module"}