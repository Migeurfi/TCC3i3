{"ast":null,"code":"import React, { useRef } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { getDefaultZIndex, Portal, Box } from '@mantine/core';\nimport { useForceUpdate, useReducedMotion, useDidUpdate } from '@mantine/hooks';\nimport { NotificationsContext } from '../Notifications.context.js';\nimport { useNotificationsEvents } from '../events.js';\nimport getPositionStyles from './get-position-styles/get-position-styles.js';\nimport getNotificationStateStyles from './get-notification-state-styles/get-notification-state-styles.js';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer.js';\nimport useStyles from './NotificationsProvider.styles.js';\nimport useNotificationsState from './use-notifications-state/use-notifications-state.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst POSITIONS = [\"top-left\", \"top-right\", \"top-center\", \"bottom-left\", \"bottom-right\", \"bottom-center\"];\n\nfunction NotificationsProvider(_a) {\n  var _b = _a,\n      {\n    className,\n    position = \"bottom-right\",\n    autoClose = 4e3,\n    transitionDuration = 250,\n    containerWidth = 440,\n    notificationMaxHeight = 200,\n    limit = 5,\n    zIndex = getDefaultZIndex(\"overlay\"),\n    style,\n    children\n  } = _b,\n      others = __objRest(_b, [\"className\", \"position\", \"autoClose\", \"transitionDuration\", \"containerWidth\", \"notificationMaxHeight\", \"limit\", \"zIndex\", \"style\", \"children\"]);\n\n  const forceUpdate = useForceUpdate();\n  const refs = useRef({});\n  const previousLength = useRef(0);\n  const {\n    notifications,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    clean,\n    cleanQueue\n  } = useNotificationsState({\n    limit\n  });\n  const {\n    classes,\n    cx,\n    theme\n  } = useStyles({\n    zIndex\n  });\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n  const positioning = (POSITIONS.includes(position) ? position : \"bottom-right\").split(\"-\");\n  useDidUpdate(() => {\n    if (notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n\n    previousLength.current = notifications.length;\n  }, [notifications]);\n  useNotificationsEvents({\n    show: showNotification,\n    hide: hideNotification,\n    update: updateNotification,\n    clean,\n    cleanQueue\n  });\n  const items = notifications.map(notification => /* @__PURE__ */React.createElement(Transition, {\n    key: notification.id,\n    timeout: duration,\n    onEnter: () => refs.current[notification.id].offsetHeight,\n    nodeRef: {\n      current: refs.current[notification.id]\n    }\n  }, state => /* @__PURE__ */React.createElement(NotificationContainer, {\n    innerRef: node => {\n      refs.current[notification.id] = node;\n    },\n    notification,\n    onHide: hideNotification,\n    className: classes.notification,\n    autoClose,\n    sx: [__spreadValues({}, getNotificationStateStyles({\n      state,\n      positioning,\n      transitionDuration: duration,\n      maxHeight: notificationMaxHeight\n    })), ...(Array.isArray(notification.sx) ? notification.sx : [notification.sx])]\n  })));\n  return /* @__PURE__ */React.createElement(NotificationsContext.Provider, {\n    value: {\n      notifications,\n      queue\n    }\n  }, /* @__PURE__ */React.createElement(Portal, null, /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.notifications, className),\n    style,\n    sx: __spreadValues({\n      maxWidth: containerWidth\n    }, getPositionStyles(positioning, containerWidth, theme.spacing.md))\n  }, others), /* @__PURE__ */React.createElement(TransitionGroup, null, items))), children);\n}\n\nNotificationsProvider.displayName = \"@mantine/notifications/NotificationsProvider\";\nexport { NotificationsProvider };","map":{"version":3,"sources":["../../src/NotificationsProvider/NotificationsProvider.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport { Transition, TransitionGroup } from 'react-transition-group';\nimport { DefaultProps, Portal, MantineStyleSystemSize, getDefaultZIndex, Box } from '@mantine/core';\nimport { useReducedMotion, useForceUpdate, useDidUpdate } from '@mantine/hooks';\nimport { NotificationsContext } from '../Notifications.context';\nimport { NotificationsProviderPositioning } from '../types';\nimport { useNotificationsEvents } from '../events';\nimport getPositionStyles from './get-position-styles/get-position-styles';\nimport getNotificationStateStyles from './get-notification-state-styles/get-notification-state-styles';\nimport NotificationContainer from '../NotificationContainer/NotificationContainer';\nimport useStyles from './NotificationsProvider.styles';\nimport useNotificationsState from './use-notifications-state/use-notifications-state';\n\nconst POSITIONS = [\n  'top-left',\n  'top-right',\n  'top-center',\n  'bottom-left',\n  'bottom-right',\n  'bottom-center',\n] as const;\n\nexport interface NotificationProviderProps\n  extends Omit<DefaultProps, MantineStyleSystemSize>,\n    React.ComponentPropsWithoutRef<'div'> {\n  /** Notifications position */\n  position?:\n    | 'top-left'\n    | 'top-right'\n    | 'top-center'\n    | 'bottom-left'\n    | 'bottom-right'\n    | 'bottom-center';\n\n  /** Auto close timeout for all notifications, false to disable auto close, can be overwritten for individual notifications by showNotification function */\n  autoClose?: number | false;\n\n  /** Notification transitions duration, 0 to turn transitions off */\n  transitionDuration?: number;\n\n  /** Notification width in px, cannot exceed 100% */\n  containerWidth?: number;\n\n  /** Notification max-height in px, used for transitions */\n  notificationMaxHeight?: number;\n\n  /** Maximum amount of notifications displayed at a time, other new notifications will be added to queue */\n  limit?: number;\n\n  /** Notifications container z-index */\n  zIndex?: React.CSSProperties['zIndex'];\n\n  /** Your application */\n  children?: React.ReactNode;\n}\n\nexport function NotificationsProvider({\n  className,\n  position = 'bottom-right',\n  autoClose = 4000,\n  transitionDuration = 250,\n  containerWidth = 440,\n  notificationMaxHeight = 200,\n  limit = 5,\n  zIndex = getDefaultZIndex('overlay'),\n  style,\n  children,\n  ...others\n}: NotificationProviderProps) {\n  const forceUpdate = useForceUpdate();\n  const refs = useRef<Record<string, HTMLDivElement>>({});\n  const previousLength = useRef<number>(0);\n  const {\n    notifications,\n    queue,\n    showNotification,\n    updateNotification,\n    hideNotification,\n    clean,\n    cleanQueue,\n  } = useNotificationsState({ limit });\n\n  const { classes, cx, theme } = useStyles({ zIndex });\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n  const duration = reduceMotion ? 1 : transitionDuration;\n  const positioning = (POSITIONS.includes(position) ? position : 'bottom-right').split(\n    '-'\n  ) as NotificationsProviderPositioning;\n\n  useDidUpdate(() => {\n    if (notifications.length > previousLength.current) {\n      setTimeout(() => forceUpdate(), 0);\n    }\n    previousLength.current = notifications.length;\n  }, [notifications]);\n\n  useNotificationsEvents({\n    show: showNotification,\n    hide: hideNotification,\n    update: updateNotification,\n    clean,\n    cleanQueue,\n  });\n\n  const items = notifications.map((notification) => (\n    <Transition\n      key={notification.id}\n      timeout={duration}\n      onEnter={() => refs.current[notification.id].offsetHeight}\n      nodeRef={{ current: refs.current[notification.id] }}\n    >\n      {(state) => (\n        <NotificationContainer\n          innerRef={(node) => {\n            refs.current[notification.id] = node;\n          }}\n          notification={notification}\n          onHide={hideNotification}\n          className={classes.notification}\n          autoClose={autoClose}\n          sx={[\n            {\n              ...getNotificationStateStyles({\n                state,\n                positioning,\n                transitionDuration: duration,\n                maxHeight: notificationMaxHeight,\n              }),\n            },\n            ...(Array.isArray(notification.sx) ? notification.sx : [notification.sx]),\n          ]}\n        />\n      )}\n    </Transition>\n  ));\n\n  return (\n    <NotificationsContext.Provider value={{ notifications, queue }}>\n      <Portal>\n        <Box\n          className={cx(classes.notifications, className)}\n          style={style}\n          sx={{\n            maxWidth: containerWidth,\n            ...getPositionStyles(positioning, containerWidth, theme.spacing.md),\n          }}\n          {...others}\n        >\n          <TransitionGroup>{items}</TransitionGroup>\n        </Box>\n      </Portal>\n\n      {children}\n    </NotificationsContext.Provider>\n  );\n}\n\nNotificationsProvider.displayName = '@mantine/notifications/NotificationsProvider';\n"]},"metadata":{},"sourceType":"module"}