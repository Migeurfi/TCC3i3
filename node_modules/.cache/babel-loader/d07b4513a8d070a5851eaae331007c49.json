{"ast":null,"code":"import { useRef, useEffect } from 'react';\n\nfunction useTimeout(fn, delay, options = {\n  autoInvoke: false\n}) {\n  const timeoutRef = useRef(null);\n\n  const start = () => {\n    if (!timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        fn();\n        timeoutRef.current = null;\n      }, delay);\n    }\n  };\n\n  const clear = () => {\n    if (timeoutRef.current) {\n      window.clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (options.autoInvoke) {\n      start();\n    }\n\n    return clear;\n  }, [delay]);\n  return {\n    start,\n    clear\n  };\n}\n\nexport { useTimeout };","map":{"version":3,"sources":["../../src/use-timeout/use-timeout.ts"],"names":[],"mappings":";;AACO,SAAS,UAAT,CAAoB,EAApB,EAAwB,KAAxB,EAA+B,OAAO,GAAG;AAAE,EAAA,UAAU,EAAE;AAAd,CAAzC,EAAgE;AACrE,QAAM,UAAU,GAAG,MAAM,CAAC,IAAD,CAAzB;;AACA,QAAM,KAAK,GAAG,MAAM;AAClB,QAAI,CAAC,UAAU,CAAC,OAAhB,EAAyB;AACvB,MAAA,UAAU,CAAC,OAAX,GAAqB,MAAM,CAAC,UAAP,CAAkB,MAAM;AAC3C,QAAA,EAAE;AACF,QAAA,UAAU,CAAC,OAAX,GAAqB,IAArB;AACD,OAHoB,EAGlB,KAHkB,CAArB;AAID;AACF,GAPD;;AAQA,QAAM,KAAK,GAAG,MAAM;AAClB,QAAI,UAAU,CAAC,OAAf,EAAwB;AACtB,MAAA,MAAM,CAAC,YAAP,CAAoB,UAAU,CAAC,OAA/B;AACA,MAAA,UAAU,CAAC,OAAX,GAAqB,IAArB;AACD;AACF,GALD;;AAMA,EAAA,SAAS,CAAC,MAAM;AACd,QAAI,OAAO,CAAC,UAAZ,EAAwB;AACtB,MAAA,KAAK;AACN;;AACD,WAAO,KAAP;AACD,GALQ,EAKN,CAAC,KAAD,CALM,CAAT;AAMA,SAAO;AAAE,IAAA,KAAF;AAAS,IAAA;AAAT,GAAP;AACF","sourcesContent":["import { useRef, useEffect } from 'react';\n\nexport function useTimeout(\n  fn: () => void,\n  delay: number,\n  options: { autoInvoke: boolean } = { autoInvoke: false }\n) {\n  const timeoutRef = useRef<number>(null);\n\n  const start = () => {\n    if (!timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        fn();\n        timeoutRef.current = null;\n      }, delay);\n    }\n  };\n\n  const clear = () => {\n    if (timeoutRef.current) {\n      window.clearTimeout(timeoutRef.current);\n      timeoutRef.current = null;\n    }\n  };\n\n  useEffect(() => {\n    if (options.autoInvoke) {\n      start();\n    }\n\n    return clear;\n  }, [delay]);\n\n  return { start, clear };\n}\n"]},"metadata":{},"sourceType":"module"}