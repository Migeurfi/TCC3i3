{"ast":null,"code":"import React, { forwardRef, useRef, useState, useEffect } from 'react';\nimport { useReducedMotion, useUncontrolled, useId, useResizeObserver, useIsomorphicEffect, useMergedRef } from '@mantine/hooks';\nimport { useComponentDefaultProps, useMantineTheme } from '@mantine/styles';\nimport useStyles, { WRAPPER_PADDING } from './SegmentedControl.styles.js';\nimport { Box } from '../Box/Box.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  disabled: false,\n  size: \"sm\",\n  transitionDuration: 200\n};\nconst SegmentedControl = forwardRef((props, ref) => {\n  var _b, _c;\n\n  const _a = useComponentDefaultProps(\"SegmentedControl\", defaultProps, props),\n        {\n    className,\n    disabled,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius,\n    size,\n    transitionDuration,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"className\", \"disabled\", \"data\", \"name\", \"value\", \"onChange\", \"color\", \"fullWidth\", \"radius\", \"size\", \"transitionDuration\", \"transitionTimingFunction\", \"classNames\", \"styles\", \"defaultValue\", \"orientation\", \"unstyled\"]);\n\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n\n  const data = _data.map(item => typeof item === \"string\" ? {\n    label: item,\n    value: item\n  } : item);\n\n  const mounted = useRef();\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data) ? (_c = (_b = data.find(item => !item.disabled)) == null ? void 0 : _b.value) != null ? _c : data[0].value : null,\n    onChange\n  });\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size,\n    fullWidth,\n    color,\n    radius,\n    shouldAnimate: reduceMotion || !shouldAnimate,\n    transitionDuration,\n    transitionTimingFunction,\n    orientation\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"SegmentedControl\"\n  });\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0]\n  });\n  const uuid = useId(name);\n  const refs = useRef({});\n  const [observerRef, containerRect] = useResizeObserver();\n  useIsomorphicEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      setShouldAnimate(false);\n    } else {\n      setShouldAnimate(true);\n    }\n  });\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n      const offsetRight = containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n      setActivePosition({\n        width,\n        height,\n        translate: [theme.dir === \"rtl\" ? offsetRight : offsetLeft, element.parentElement.offsetTop - WRAPPER_PADDING]\n      });\n    }\n  }, [_value, containerRect]);\n  const controls = data.map(item => /* @__PURE__ */React.createElement(\"div\", {\n    className: cx(classes.control, {\n      [classes.controlActive]: _value === item.value\n    }),\n    key: item.value\n  }, /* @__PURE__ */React.createElement(\"input\", {\n    className: classes.input,\n    disabled: disabled || item.disabled,\n    type: \"radio\",\n    name: uuid,\n    value: item.value,\n    id: `${uuid}-${item.value}`,\n    checked: _value === item.value,\n    onChange: () => handleValueChange(item.value)\n  }), /* @__PURE__ */React.createElement(\"label\", {\n    className: cx(classes.label, {\n      [classes.labelActive]: _value === item.value,\n      [classes.disabled]: disabled || item.disabled\n    }),\n    htmlFor: `${uuid}-${item.value}`,\n    ref: node => {\n      refs.current[item.value] = node;\n    }\n  }, item.label)));\n  return /* @__PURE__ */React.createElement(Box, __spreadValues({\n    className: cx(classes.root, className),\n    ref: useMergedRef(observerRef, ref)\n  }, others), !!_value && shouldAnimate && /* @__PURE__ */React.createElement(Box, {\n    component: \"span\",\n    className: classes.active,\n    sx: {\n      width: activePosition.width,\n      height: activePosition.height,\n      transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`\n    }\n  }), controls);\n});\nSegmentedControl.displayName = \"@mantine/core/SegmentedControl\";\nexport { SegmentedControl };","map":{"version":3,"sources":["../../src/SegmentedControl/SegmentedControl.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState, forwardRef } from 'react';\nimport {\n  useReducedMotion,\n  useResizeObserver,\n  useUncontrolled,\n  useId,\n  useMergedRef,\n  useIsomorphicEffect,\n} from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  useComponentDefaultProps,\n  useMantineTheme,\n} from '@mantine/styles';\nimport { Box } from '../Box';\nimport useStyles, {\n  WRAPPER_PADDING,\n  SegmentedControlStylesParams,\n} from './SegmentedControl.styles';\n\nexport interface SegmentedControlItem {\n  value: string;\n  label: React.ReactNode;\n  disabled?: boolean;\n}\n\nexport type SegmentedControlStylesNames = Selectors<typeof useStyles>;\n\nexport interface SegmentedControlProps\n  extends DefaultProps<SegmentedControlStylesNames, SegmentedControlStylesParams>,\n    Omit<React.ComponentPropsWithoutRef<'div'>, 'value' | 'onChange'> {\n  /** Data based on which controls are rendered */\n  data: string[] | SegmentedControlItem[];\n\n  /** Current selected value */\n  value?: string;\n\n  /** Disabled input state */\n  disabled?: boolean;\n\n  /** Called when value changes */\n  onChange?(value: string): void;\n\n  /** Name of the radio group, default to random id */\n  name?: string;\n\n  /** True if component should have 100% width */\n  fullWidth?: boolean;\n\n  /** Active control color from theme.colors, defaults to white in light color scheme and theme.colors.dark[9] in dark */\n  color?: MantineColor;\n\n  /** Controls font-size, paddings and height */\n  size?: MantineSize;\n\n  /** Border-radius from theme or number to set border-radius in px */\n  radius?: MantineNumberSize;\n\n  /** Transition duration in ms, set to 0 to turn off transitions */\n  transitionDuration?: number;\n\n  /** Transition timing function for all transitions, defaults to theme.transitionTimingFunction */\n  transitionTimingFunction?: string;\n\n  /** Default value for uncontrolled component */\n  defaultValue?: string;\n\n  /** Display Vertically */\n  orientation?: 'vertical' | 'horizontal';\n}\n\nconst defaultProps: Partial<SegmentedControlProps> = {\n  disabled: false,\n  size: 'sm',\n  transitionDuration: 200,\n};\n\nexport const SegmentedControl = forwardRef<HTMLDivElement, SegmentedControlProps>((props, ref) => {\n  const {\n    className,\n    disabled,\n    data: _data,\n    name,\n    value,\n    onChange,\n    color,\n    fullWidth,\n    radius,\n    size,\n    transitionDuration,\n    transitionTimingFunction,\n    classNames,\n    styles,\n    defaultValue,\n    orientation,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('SegmentedControl', defaultProps, props);\n  const theme = useMantineTheme();\n  const shouldReduceMotion = useReducedMotion();\n  const reduceMotion = theme.respectReducedMotion ? shouldReduceMotion : false;\n\n  const data = _data.map(\n    (item: string | SegmentedControlItem): SegmentedControlItem =>\n      typeof item === 'string' ? { label: item, value: item } : item\n  );\n  const mounted = useRef<Boolean>();\n\n  const [shouldAnimate, setShouldAnimate] = useState(false);\n  const [_value, handleValueChange] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: Array.isArray(data)\n      ? data.find((item) => !item.disabled)?.value ?? data[0].value\n      : null,\n    onChange,\n  });\n\n  const { classes, cx } = useStyles(\n    {\n      size,\n      fullWidth,\n      color,\n      radius,\n      shouldAnimate: reduceMotion || !shouldAnimate,\n      transitionDuration,\n      transitionTimingFunction,\n      orientation,\n    },\n    { classNames, styles, unstyled, name: 'SegmentedControl' }\n  );\n\n  const [activePosition, setActivePosition] = useState({\n    width: 0,\n    height: 0,\n    translate: [0, 0],\n  });\n  const uuid = useId(name);\n  const refs = useRef<Record<string, HTMLLabelElement>>({});\n  const [observerRef, containerRect] = useResizeObserver();\n\n  useIsomorphicEffect(() => {\n    if (!mounted.current) {\n      mounted.current = true;\n      setShouldAnimate(false);\n    } else {\n      setShouldAnimate(true);\n    }\n  });\n\n  useEffect(() => {\n    if (_value in refs.current && observerRef.current) {\n      const element = refs.current[_value];\n      const elementRect = element.getBoundingClientRect();\n      const scaledValue = element.offsetWidth / elementRect.width;\n      const width = elementRect.width * scaledValue || 0;\n      const height = elementRect.height * scaledValue || 0;\n\n      const offsetRight =\n        containerRect.width - element.parentElement.offsetLeft + WRAPPER_PADDING - width;\n      const offsetLeft = element.parentElement.offsetLeft - WRAPPER_PADDING;\n\n      setActivePosition({\n        width,\n        height,\n        translate: [\n          theme.dir === 'rtl' ? offsetRight : offsetLeft,\n          element.parentElement.offsetTop - WRAPPER_PADDING,\n        ],\n      });\n    }\n  }, [_value, containerRect]);\n\n  const controls = data.map((item) => (\n    <div\n      className={cx(classes.control, { [classes.controlActive]: _value === item.value })}\n      key={item.value}\n    >\n      <input\n        className={classes.input}\n        disabled={disabled || item.disabled}\n        type=\"radio\"\n        name={uuid}\n        value={item.value}\n        id={`${uuid}-${item.value}`}\n        checked={_value === item.value}\n        onChange={() => handleValueChange(item.value)}\n      />\n\n      <label\n        className={cx(classes.label, {\n          [classes.labelActive]: _value === item.value,\n          [classes.disabled]: disabled || item.disabled,\n        })}\n        htmlFor={`${uuid}-${item.value}`}\n        ref={(node) => {\n          refs.current[item.value] = node;\n        }}\n      >\n        {item.label}\n      </label>\n    </div>\n  ));\n\n  return (\n    <Box className={cx(classes.root, className)} ref={useMergedRef(observerRef, ref)} {...others}>\n      {!!_value && shouldAnimate && (\n        <Box\n          component=\"span\"\n          className={classes.active}\n          sx={{\n            width: activePosition.width,\n            height: activePosition.height,\n            transform: `translate(${activePosition.translate[0]}px, ${activePosition.translate[1]}px )`,\n          }}\n        />\n      )}\n\n      {controls}\n    </Box>\n  );\n});\n\nSegmentedControl.displayName = '@mantine/core/SegmentedControl';\n"]},"metadata":{},"sourceType":"module"}