{"ast":null,"code":"import { useRef, useEffect } from 'react';\n\nfunction useDelayedHover({\n  open,\n  close,\n  openDelay,\n  closeDelay\n}) {\n  const openTimeout = useRef(-1);\n  const closeTimeout = useRef(-1);\n\n  const clearTimeouts = () => {\n    window.clearTimeout(openTimeout.current);\n    window.clearTimeout(closeTimeout.current);\n  };\n\n  const openDropdown = () => {\n    clearTimeouts();\n\n    if (openDelay === 0) {\n      open();\n    } else {\n      openTimeout.current = window.setTimeout(open, openDelay);\n    }\n  };\n\n  const closeDropdown = () => {\n    clearTimeouts();\n\n    if (closeDelay === 0) {\n      close();\n    } else {\n      closeTimeout.current = window.setTimeout(close, closeDelay);\n    }\n  };\n\n  useEffect(() => clearTimeouts, []);\n  return {\n    openDropdown,\n    closeDropdown\n  };\n}\n\nexport { useDelayedHover };","map":{"version":3,"sources":["../../src/Floating/use-delayed-hover.ts"],"names":[],"mappings":";;AACO,SAAS,eAAT,CAAyB;AAAE,EAAA,IAAF;AAAQ,EAAA,KAAR;AAAe,EAAA,SAAf;AAA0B,EAAA;AAA1B,CAAzB,EAAiE;AACtE,QAAM,WAAW,GAAG,MAAM,CAAC,CAAC,CAAF,CAA1B;AACA,QAAM,YAAY,GAAG,MAAM,CAAC,CAAC,CAAF,CAA3B;;AACA,QAAM,aAAa,GAAG,MAAM;AAC1B,IAAA,MAAM,CAAC,YAAP,CAAoB,WAAW,CAAC,OAAhC;AACA,IAAA,MAAM,CAAC,YAAP,CAAoB,YAAY,CAAC,OAAjC;AACD,GAHD;;AAIA,QAAM,YAAY,GAAG,MAAM;AACzB,IAAA,aAAa;;AACb,QAAI,SAAS,KAAK,CAAlB,EAAqB;AACnB,MAAA,IAAI;AACL,KAFD,MAEO;AACL,MAAA,WAAW,CAAC,OAAZ,GAAsB,MAAM,CAAC,UAAP,CAAkB,IAAlB,EAAwB,SAAxB,CAAtB;AACD;AACF,GAPD;;AAQA,QAAM,aAAa,GAAG,MAAM;AAC1B,IAAA,aAAa;;AACb,QAAI,UAAU,KAAK,CAAnB,EAAsB;AACpB,MAAA,KAAK;AACN,KAFD,MAEO;AACL,MAAA,YAAY,CAAC,OAAb,GAAuB,MAAM,CAAC,UAAP,CAAkB,KAAlB,EAAyB,UAAzB,CAAvB;AACD;AACF,GAPD;;AAQA,EAAA,SAAS,CAAC,MAAM,aAAP,EAAsB,EAAtB,CAAT;AACA,SAAO;AAAE,IAAA,YAAF;AAAgB,IAAA;AAAhB,GAAP;AACF","sourcesContent":["import { useRef, useEffect } from 'react';\n\ninterface UseDelayedHoverInput {\n  open(): void;\n  close(): void;\n  openDelay: number;\n  closeDelay: number;\n}\n\nexport function useDelayedHover({ open, close, openDelay, closeDelay }: UseDelayedHoverInput) {\n  const openTimeout = useRef(-1);\n  const closeTimeout = useRef(-1);\n\n  const clearTimeouts = () => {\n    window.clearTimeout(openTimeout.current);\n    window.clearTimeout(closeTimeout.current);\n  };\n\n  const openDropdown = () => {\n    clearTimeouts();\n\n    if (openDelay === 0) {\n      open();\n    } else {\n      openTimeout.current = window.setTimeout(open, openDelay);\n    }\n  };\n\n  const closeDropdown = () => {\n    clearTimeouts();\n\n    if (closeDelay === 0) {\n      close();\n    } else {\n      closeTimeout.current = window.setTimeout(close, closeDelay);\n    }\n  };\n\n  useEffect(() => clearTimeouts, []);\n\n  return { openDropdown, closeDropdown };\n}\n"]},"metadata":{},"sourceType":"module"}