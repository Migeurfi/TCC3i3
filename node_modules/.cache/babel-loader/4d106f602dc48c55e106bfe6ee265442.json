{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps, extractSystemStyles } from '@mantine/styles';\nimport { ChipGroup } from './ChipGroup/ChipGroup.js';\nimport { useChipGroup } from './ChipGroup.context.js';\nimport useStyles from './Chip.styles.js';\nimport { Box } from '../Box/Box.js';\nimport { CheckIcon } from '../Checkbox/CheckboxIcon.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  type: \"checkbox\",\n  size: \"sm\",\n  radius: \"xl\",\n  variant: \"outline\"\n};\nconst Chip = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"Chip\", defaultProps, props),\n        {\n    radius,\n    type,\n    size,\n    variant,\n    disabled,\n    id,\n    color,\n    children,\n    className,\n    classNames,\n    style,\n    styles,\n    checked,\n    defaultChecked,\n    onChange,\n    sx,\n    wrapperProps,\n    value,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"radius\", \"type\", \"size\", \"variant\", \"disabled\", \"id\", \"color\", \"children\", \"className\", \"classNames\", \"style\", \"styles\", \"checked\", \"defaultChecked\", \"onChange\", \"sx\", \"wrapperProps\", \"value\", \"unstyled\"]);\n\n  const ctx = useChipGroup();\n  const uuid = useId(id);\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const {\n    classes,\n    cx\n  } = useStyles({\n    radius,\n    size,\n    color\n  }, {\n    classNames,\n    styles,\n    unstyled,\n    name: \"Chip\"\n  });\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange\n  });\n  const contextProps = ctx ? {\n    checked: ctx.isChipSelected(value),\n    onChange: ctx.onChange,\n    type: ctx.multiple ? \"checkbox\" : \"radio\"\n  } : {};\n\n  const _checked = contextProps.checked || _value;\n\n  return /* @__PURE__ */React.createElement(Box, __spreadValues(__spreadValues({\n    className: cx(classes.root, className),\n    style,\n    sx\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(\"input\", __spreadValues(__spreadValues({\n    type,\n    className: classes.input,\n    checked: _checked,\n    onChange: event => setValue(event.currentTarget.checked),\n    id: uuid,\n    disabled,\n    ref,\n    value\n  }, contextProps), rest)), /* @__PURE__ */React.createElement(\"label\", {\n    htmlFor: uuid,\n    \"data-checked\": _checked || void 0,\n    \"data-disabled\": disabled || void 0,\n    \"data-variant\": variant,\n    className: classes.label\n  }, _checked && /* @__PURE__ */React.createElement(\"span\", {\n    className: classes.iconWrapper\n  }, /* @__PURE__ */React.createElement(CheckIcon, {\n    className: classes.checkIcon\n  })), children));\n});\nChip.displayName = \"@mantine/core/Chip\";\nChip.Group = ChipGroup;\nexport { Chip };","map":{"version":3,"sources":["../../src/Chip/Chip.tsx"],"names":[],"mappings":";;;;;;;;AAAA,IAAI,SAAS,GAAG,MAAM,CAAC,cAAvB;AACA,IAAI,mBAAmB,GAAG,MAAM,CAAC,qBAAjC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,cAApC;AACA,IAAI,YAAY,GAAG,MAAM,CAAC,SAAP,CAAiB,oBAApC;;AACA,IAAI,eAAe,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,KAAX,KAAqB,GAAG,IAAI,GAAP,GAAa,SAAS,CAAC,GAAD,EAAM,GAAN,EAAW;AAAE,EAAA,UAAU,EAAE,IAAd;AAAoB,EAAA,YAAY,EAAE,IAAlC;AAAwC,EAAA,QAAQ,EAAE,IAAlD;AAAwD,EAAA;AAAxD,CAAX,CAAtB,GAAoG,GAAG,CAAC,GAAD,CAAH,GAAW,KAA1J;;AACA,IAAI,cAAc,GAAG,CAAC,CAAD,EAAI,CAAJ,KAAU;AAC7B,OAAK,IAAI,IAAT,IAAiB,CAAC,KAAK,CAAC,GAAG,EAAT,CAAlB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;;AACJ,MAAI,mBAAJ,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,CAAD,CAApC,EAAyC;AACvC,QAAI,YAAY,CAAC,IAAb,CAAkB,CAAlB,EAAqB,IAArB,CAAJ,EACE,eAAe,CAAC,CAAD,EAAI,IAAJ,EAAU,CAAC,CAAC,IAAD,CAAX,CAAf;AACH;AACH,SAAO,CAAP;AACD,CAVD;;AAWA,IAAI,SAAS,GAAG,CAAC,MAAD,EAAS,OAAT,KAAqB;AACnC,MAAI,MAAM,GAAG,EAAb;;AACA,OAAK,IAAI,IAAT,IAAiB,MAAjB,EACE,IAAI,YAAY,CAAC,IAAb,CAAkB,MAAlB,EAA0B,IAA1B,KAAmC,OAAO,CAAC,OAAR,CAAgB,IAAhB,IAAwB,CAA/D,EACE,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,IAAD,CAArB;;AACJ,MAAI,MAAM,IAAI,IAAV,IAAkB,mBAAtB,EACE,KAAK,IAAI,IAAT,IAAiB,mBAAmB,CAAC,MAAD,CAApC,EAA8C;AAC5C,QAAI,OAAO,CAAC,OAAR,CAAgB,IAAhB,IAAwB,CAAxB,IAA6B,YAAY,CAAC,IAAb,CAAkB,MAAlB,EAA0B,IAA1B,CAAjC,EACE,MAAM,CAAC,IAAD,CAAN,GAAe,MAAM,CAAC,IAAD,CAArB;AACH;AACH,SAAO,MAAP;AACD,CAXD;;AAuBA,MAAM,YAAY,GAAG;AACnB,EAAA,IAAI,EAAE,UADa;AAEnB,EAAA,IAAI,EAAE,IAFa;AAGnB,EAAA,MAAM,EAAE,IAHW;AAInB,EAAA,OAAO,EAAE;AAJU,CAArB;AAMY,MAAC,IAAI,GAAG,UAAU,CAAC,CAAC,KAAD,EAAQ,GAAR,KAAgB;AAC7C,QAAM,EAAE,GAAG,wBAAwB,CAAC,MAAD,EAAS,YAAT,EAAuB,KAAvB,CAAnC;AAAA,QAAkE;AAChE,IAAA,MADgE;AAEhE,IAAA,IAFgE;AAGhE,IAAA,IAHgE;AAIhE,IAAA,OAJgE;AAKhE,IAAA,QALgE;AAMhE,IAAA,EANgE;AAOhE,IAAA,KAPgE;AAQhE,IAAA,QARgE;AAShE,IAAA,SATgE;AAUhE,IAAA,UAVgE;AAWhE,IAAA,KAXgE;AAYhE,IAAA,MAZgE;AAahE,IAAA,OAbgE;AAchE,IAAA,cAdgE;AAehE,IAAA,QAfgE;AAgBhE,IAAA,EAhBgE;AAiBhE,IAAA,YAjBgE;AAkBhE,IAAA,KAlBgE;AAmBhE,IAAA;AAnBgE,MAoB9D,EApBJ;AAAA,QAoBQ,MAAM,GAAG,SAAS,CAAC,EAAD,EAAK,CAC7B,QAD6B,EAE7B,MAF6B,EAG7B,MAH6B,EAI7B,SAJ6B,EAK7B,UAL6B,EAM7B,IAN6B,EAO7B,OAP6B,EAQ7B,UAR6B,EAS7B,WAT6B,EAU7B,YAV6B,EAW7B,OAX6B,EAY7B,QAZ6B,EAa7B,SAb6B,EAc7B,gBAd6B,EAe7B,UAf6B,EAgB7B,IAhB6B,EAiB7B,cAjB6B,EAkB7B,OAlB6B,EAmB7B,UAnB6B,CAAL,CApB1B;;AAyCA,QAAM,GAAG,GAAG,YAAY,EAAxB;AACA,QAAM,IAAI,GAAG,KAAK,CAAC,EAAD,CAAlB;AACA,QAAM;AAAE,IAAA,YAAF;AAAgB,IAAA;AAAhB,MAAyB,mBAAmB,CAAC,MAAD,CAAlD;AACA,QAAM;AAAE,IAAA,OAAF;AAAW,IAAA;AAAX,MAAkB,SAAS,CAAC;AAAE,IAAA,MAAF;AAAU,IAAA,IAAV;AAAgB,IAAA;AAAhB,GAAD,EAA0B;AAAE,IAAA,UAAF;AAAc,IAAA,MAAd;AAAsB,IAAA,QAAtB;AAAgC,IAAA,IAAI,EAAE;AAAtC,GAA1B,CAAjC;AACA,QAAM,CAAC,MAAD,EAAS,QAAT,IAAqB,eAAe,CAAC;AACzC,IAAA,KAAK,EAAE,OADkC;AAEzC,IAAA,YAAY,EAAE,cAF2B;AAGzC,IAAA,UAAU,EAAE,KAH6B;AAIzC,IAAA;AAJyC,GAAD,CAA1C;AAMA,QAAM,YAAY,GAAG,GAAG,GAAG;AACzB,IAAA,OAAO,EAAE,GAAG,CAAC,cAAJ,CAAmB,KAAnB,CADgB;AAEzB,IAAA,QAAQ,EAAE,GAAG,CAAC,QAFW;AAGzB,IAAA,IAAI,EAAE,GAAG,CAAC,QAAJ,GAAe,UAAf,GAA4B;AAHT,GAAH,GAIpB,EAJJ;;AAKA,QAAM,QAAQ,GAAG,YAAY,CAAC,OAAb,IAAwB,MAAzC;;AACA,SAAA,eAAuB,KAAK,CAAC,aAAN,CAAoB,GAApB,EAAyB,cAAc,CAAC,cAAc,CAAC;AAC5E,IAAA,SAAS,EAAE,EAAE,CAAC,OAAO,CAAC,IAAT,EAAe,SAAf,CAD+D;AAE5E,IAAA,KAF4E;AAG5E,IAAA;AAH4E,GAAD,EAI1E,YAJ0E,CAAf,EAI5C,YAJ4C,CAAvC,EAIQ,eAAkB,KAAK,CAAC,aAAN,CAAoB,OAApB,EAA6B,cAAc,CAAC,cAAc,CAAC;AAC1G,IAAA,IAD0G;AAE1G,IAAA,SAAS,EAAE,OAAO,CAAC,KAFuF;AAG1G,IAAA,OAAO,EAAE,QAHiG;AAI1G,IAAA,QAAQ,EAAG,KAAD,IAAW,QAAQ,CAAC,KAAK,CAAC,aAAN,CAAoB,OAArB,CAJ6E;AAK1G,IAAA,EAAE,EAAE,IALsG;AAM1G,IAAA,QAN0G;AAO1G,IAAA,GAP0G;AAQ1G,IAAA;AAR0G,GAAD,EASxG,YATwG,CAAf,EAS1E,IAT0E,CAA3C,CAJ1B,EAaC,eAAkB,KAAK,CAAC,aAAN,CAAoB,OAApB,EAA6B;AACrE,IAAA,OAAO,EAAE,IAD4D;AAErE,oBAAgB,QAAQ,IAAI,KAAK,CAFoC;AAGrE,qBAAiB,QAAQ,IAAI,KAAK,CAHmC;AAIrE,oBAAgB,OAJqD;AAKrE,IAAA,SAAS,EAAE,OAAO,CAAC;AALkD,GAA7B,EAMvC,QAAQ,IAAA,eAAoB,KAAK,CAAC,aAAN,CAAoB,MAApB,EAA4B;AACzD,IAAA,SAAS,EAAE,OAAO,CAAC;AADsC,GAA5B,EAE9B,eAAkB,KAAK,CAAC,aAAN,CAAoB,SAApB,EAA+B;AAChD,IAAA,SAAS,EAAE,OAAO,CAAC;AAD6B,GAA/B,CAFY,CANW,EAUrC,QAVqC,CAbnB,CAAvB;AAwBD,CAlF6B,CAAlB;AAmFZ,IAAI,CAAC,WAAL,GAAmB,oBAAnB;AACA,IAAI,CAAC,KAAL,GAAa,SAAb","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useId, useUncontrolled } from '@mantine/hooks';\nimport {\n  DefaultProps,\n  MantineNumberSize,\n  MantineSize,\n  MantineColor,\n  Selectors,\n  extractSystemStyles,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ForwardRefWithStaticComponents } from '@mantine/utils';\nimport { Box } from '../Box';\nimport { CheckIcon } from '../Checkbox';\nimport { ChipGroup } from './ChipGroup/ChipGroup';\nimport { useChipGroup } from './ChipGroup.context';\nimport useStyles, { ChipStylesParams } from './Chip.styles';\n\nexport type ChipStylesNames = Selectors<typeof useStyles>;\n\nexport interface ChipProps\n  extends DefaultProps<ChipStylesNames, ChipStylesParams>,\n    Omit<React.ComponentPropsWithRef<'input'>, 'size' | 'onChange'> {\n  /** Chip radius from theme or number to set value in px */\n  radius?: MantineNumberSize;\n\n  /** Predefined chip size */\n  size?: MantineSize;\n\n  /** Chip input type */\n  type?: 'radio' | 'checkbox';\n\n  /** Controls chip appearance, defaults to filled with dark theme and to outline in light theme */\n  variant?: 'outline' | 'filled';\n\n  /** Chip label */\n  children: React.ReactNode;\n\n  /** Checked state for controlled component */\n  checked?: boolean;\n\n  /** Default value for uncontrolled component */\n  defaultChecked?: boolean;\n\n  /** Calls when checked state changes */\n  onChange?(checked: boolean): void;\n\n  /** Active color from theme, defaults to theme.primaryColor */\n  color?: MantineColor;\n\n  /** Static id to bind input with label */\n  id?: string;\n\n  /** Props spread to wrapper element */\n  wrapperProps?: Record<string, any>;\n}\n\nconst defaultProps: Partial<ChipProps> = {\n  type: 'checkbox',\n  size: 'sm',\n  radius: 'xl',\n  variant: 'outline',\n};\n\ntype ChipComponent = ForwardRefWithStaticComponents<ChipProps, { Group: typeof ChipGroup }>;\n\nexport const Chip: ChipComponent = forwardRef<HTMLInputElement, ChipProps>((props, ref) => {\n  const {\n    radius,\n    type,\n    size,\n    variant,\n    disabled,\n    id,\n    color,\n    children,\n    className,\n    classNames,\n    style,\n    styles,\n    checked,\n    defaultChecked,\n    onChange,\n    sx,\n    wrapperProps,\n    value,\n    unstyled,\n    ...others\n  } = useComponentDefaultProps('Chip', defaultProps, props);\n  const ctx = useChipGroup();\n\n  const uuid = useId(id);\n  const { systemStyles, rest } = extractSystemStyles(others);\n  const { classes, cx } = useStyles(\n    { radius, size, color },\n    { classNames, styles, unstyled, name: 'Chip' }\n  );\n\n  const [_value, setValue] = useUncontrolled({\n    value: checked,\n    defaultValue: defaultChecked,\n    finalValue: false,\n    onChange,\n  });\n\n  const contextProps = ctx\n    ? {\n        checked: ctx.isChipSelected(value as string),\n        onChange: ctx.onChange,\n        type: ctx.multiple ? 'checkbox' : 'radio',\n      }\n    : {};\n  const _checked = contextProps.checked || _value;\n\n  return (\n    <Box\n      className={cx(classes.root, className)}\n      style={style}\n      sx={sx}\n      {...systemStyles}\n      {...wrapperProps}\n    >\n      <input\n        type={type}\n        className={classes.input}\n        checked={_checked}\n        onChange={(event) => setValue(event.currentTarget.checked)}\n        id={uuid}\n        disabled={disabled}\n        ref={ref}\n        value={value}\n        {...contextProps}\n        {...rest}\n      />\n      <label\n        htmlFor={uuid}\n        data-checked={_checked || undefined}\n        data-disabled={disabled || undefined}\n        data-variant={variant}\n        className={classes.label}\n      >\n        {_checked && (\n          <span className={classes.iconWrapper}>\n            <CheckIcon className={classes.checkIcon} />\n          </span>\n        )}\n        {children}\n      </label>\n    </Box>\n  );\n}) as any;\n\nChip.displayName = '@mantine/core/Chip';\nChip.Group = ChipGroup;\n"]},"metadata":{},"sourceType":"module"}