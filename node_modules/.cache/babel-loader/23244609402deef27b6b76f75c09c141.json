{"ast":null,"code":"import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { useComponentDefaultProps } from '@mantine/styles';\nimport { ChipGroupProvider } from '../ChipGroup.context.js';\nimport { Group } from '../../Group/Group.js';\nvar __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst defaultProps = {\n  spacing: \"xs\"\n};\n\nfunction ChipGroup(props) {\n  const _a = useComponentDefaultProps(\"ChipGroup\", defaultProps, props),\n        {\n    value,\n    defaultValue,\n    onChange,\n    spacing,\n    multiple,\n    children,\n    unstyled\n  } = _a,\n        others = __objRest(_a, [\"value\", \"defaultValue\", \"onChange\", \"spacing\", \"multiple\", \"children\", \"unstyled\"]);\n\n  const [_value, setValue] = useUncontrolled({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange\n  });\n\n  const isChipSelected = val => Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = event => {\n    const val = event.currentTarget.value;\n\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter(v => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return /* @__PURE__ */React.createElement(ChipGroupProvider, {\n    value: {\n      isChipSelected,\n      onChange: handleChange,\n      multiple\n    }\n  }, /* @__PURE__ */React.createElement(Group, __spreadValues({\n    spacing,\n    unstyled\n  }, others), children));\n}\n\nChipGroup.displayName = \"@mantine/core/ChipGroup\";\nexport { ChipGroup };","map":{"version":3,"sources":["../../../src/Chip/ChipGroup/ChipGroup.tsx"],"names":[],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useUncontrolled } from '@mantine/hooks';\nimport { MantineNumberSize, useComponentDefaultProps } from '@mantine/styles';\nimport { Group, GroupProps } from '../../Group';\nimport { ChipGroupProvider } from '../ChipGroup.context';\n\nexport interface ChipGroupProps<T extends boolean = false>\n  extends Omit<GroupProps, 'value' | 'defaultValue' | 'onChange' | 'classNames' | 'styles'> {\n  /** Key of theme.spacing or number to set gap in px */\n  spacing?: MantineNumberSize;\n\n  /** Allow multiple values to be selected at a time */\n  multiple?: T;\n\n  /** Controlled component value */\n  value?: T extends true ? string[] : string;\n\n  /** Uncontrolled component initial value */\n  defaultValue?: T extends true ? string[] : string;\n\n  /** Called when value changes */\n  onChange?(value: T extends true ? string[] : string): void;\n\n  /** <Chip /> components */\n  children?: React.ReactNode;\n}\n\nconst defaultProps: Partial<ChipGroupProps<false>> = {\n  spacing: 'xs',\n};\n\nexport function ChipGroup<T extends boolean>(props: ChipGroupProps<T>) {\n  const { value, defaultValue, onChange, spacing, multiple, children, unstyled, ...others } =\n    useComponentDefaultProps('ChipGroup', defaultProps as any, props);\n\n  const [_value, setValue] = useUncontrolled<string | string[]>({\n    value,\n    defaultValue,\n    finalValue: multiple ? [] : null,\n    onChange,\n  });\n\n  const isChipSelected = (val: string) =>\n    Array.isArray(_value) ? _value.includes(val) : val === _value;\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const val = event.currentTarget.value;\n    if (Array.isArray(_value)) {\n      setValue(_value.includes(val) ? _value.filter((v) => v !== val) : [..._value, val]);\n    } else {\n      setValue(val);\n    }\n  };\n\n  return (\n    <ChipGroupProvider value={{ isChipSelected, onChange: handleChange, multiple }}>\n      <Group spacing={spacing} unstyled={unstyled} {...others}>\n        {children}\n      </Group>\n    </ChipGroupProvider>\n  );\n}\n\nChipGroup.displayName = '@mantine/core/ChipGroup';\n"]},"metadata":{},"sourceType":"module"}