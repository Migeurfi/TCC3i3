{"ast":null,"code":"import React, { forwardRef } from 'react';\nimport { useId, useDisclosure } from '@mantine/hooks';\nimport { useComponentDefaultProps, useMantineTheme, extractSystemStyles } from '@mantine/styles';\nimport { PasswordToggleIcon } from './PasswordToggleIcon.js';\nimport useStyles from './PasswordInput.styles.js';\nimport { ActionIcon } from '../ActionIcon/ActionIcon.js';\nimport { Input } from '../Input/Input.js';\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __objRest = (source, exclude) => {\n  var target = {};\n\n  for (var prop in source) if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0) target[prop] = source[prop];\n\n  if (source != null && __getOwnPropSymbols) for (var prop of __getOwnPropSymbols(source)) {\n    if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop)) target[prop] = source[prop];\n  }\n  return target;\n};\n\nconst buttonSizes = {\n  xs: 22,\n  sm: 28,\n  md: 26,\n  lg: 32,\n  xl: 40\n};\nconst iconSizes = {\n  xs: 12,\n  sm: 15,\n  md: 17,\n  lg: 19,\n  xl: 21\n};\nconst rightSectionSizes = {\n  xs: 28,\n  sm: 34,\n  md: 34,\n  lg: 44,\n  xl: 54\n};\nconst defaultProps = {\n  size: \"sm\",\n  toggleTabIndex: -1,\n  visibilityToggleIcon: PasswordToggleIcon,\n  __staticSelector: \"PasswordInput\"\n};\nconst PasswordInput = forwardRef((props, ref) => {\n  const _a = useComponentDefaultProps(\"PasswordInput\", defaultProps, props),\n        {\n    radius,\n    disabled,\n    size,\n    toggleTabIndex,\n    className,\n    id,\n    label,\n    error,\n    required,\n    style,\n    icon,\n    description,\n    wrapperProps,\n    classNames,\n    styles,\n    variant,\n    visibilityToggleIcon: VisibilityToggleIcon,\n    __staticSelector,\n    rightSection: _rightSection,\n    rightSectionWidth: _rightSectionWidth,\n    rightSectionProps: _rightSectionProps,\n    sx,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    unstyled,\n    visibilityToggleLabel\n  } = _a,\n        others = __objRest(_a, [\"radius\", \"disabled\", \"size\", \"toggleTabIndex\", \"className\", \"id\", \"label\", \"error\", \"required\", \"style\", \"icon\", \"description\", \"wrapperProps\", \"classNames\", \"styles\", \"variant\", \"visibilityToggleIcon\", \"__staticSelector\", \"rightSection\", \"rightSectionWidth\", \"rightSectionProps\", \"sx\", \"labelProps\", \"descriptionProps\", \"errorProps\", \"unstyled\", \"visibilityToggleLabel\"]);\n\n  const theme = useMantineTheme();\n  const rightSectionWidth = theme.fn.size({\n    size,\n    sizes: rightSectionSizes\n  });\n  const {\n    classes,\n    cx\n  } = useStyles({\n    size,\n    rightSectionWidth\n  }, {\n    name: \"PasswordInput\",\n    classNames,\n    styles,\n    unstyled\n  });\n  const uuid = useId(id);\n  const {\n    systemStyles,\n    rest\n  } = extractSystemStyles(others);\n  const [reveal, {\n    toggle\n  }] = useDisclosure(false);\n  const rightSection = /* @__PURE__ */React.createElement(ActionIcon, {\n    className: classes.visibilityToggle,\n    tabIndex: toggleTabIndex,\n    radius,\n    size: theme.fn.size({\n      size,\n      sizes: buttonSizes\n    }),\n    \"aria-hidden\": !visibilityToggleLabel,\n    \"aria-label\": visibilityToggleLabel,\n    unstyled,\n    onMouseDown: event => {\n      event.preventDefault();\n      toggle();\n    },\n    onKeyDown: event => {\n      if (event.key === \" \") {\n        event.preventDefault();\n        toggle();\n      }\n    }\n  }, /* @__PURE__ */React.createElement(VisibilityToggleIcon, {\n    reveal,\n    size: theme.fn.size({\n      size,\n      sizes: iconSizes\n    })\n  }));\n  return /* @__PURE__ */React.createElement(Input.Wrapper, __spreadValues(__spreadValues({\n    required,\n    id: uuid,\n    label,\n    error,\n    description,\n    size,\n    className,\n    style,\n    classNames,\n    styles,\n    __staticSelector,\n    sx,\n    errorProps,\n    descriptionProps,\n    labelProps,\n    unstyled\n  }, systemStyles), wrapperProps), /* @__PURE__ */React.createElement(Input, {\n    component: \"div\",\n    invalid: !!error,\n    icon,\n    size,\n    classNames: __spreadProps(__spreadValues({}, classNames), {\n      input: classes.input\n    }),\n    styles,\n    radius,\n    disabled,\n    __staticSelector,\n    rightSectionWidth,\n    rightSection: !disabled && rightSection,\n    variant,\n    unstyled\n  }, /* @__PURE__ */React.createElement(\"input\", __spreadValues({\n    type: reveal ? \"text\" : \"password\",\n    required,\n    className: cx(classes.innerInput, {\n      [classes.withIcon]: icon,\n      [classes.invalid]: !!error\n    }),\n    disabled,\n    id: uuid,\n    ref\n  }, rest))));\n});\nPasswordInput.displayName = \"@mantine/core/PasswordInput\";\nexport { PasswordInput };","map":{"version":3,"sources":["../../src/PasswordInput/PasswordInput.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\nimport { useDisclosure, useId } from '@mantine/hooks';\nimport {\n  Selectors,\n  DefaultProps,\n  extractSystemStyles,\n  useMantineTheme,\n  useComponentDefaultProps,\n} from '@mantine/styles';\nimport { ActionIcon } from '../ActionIcon';\nimport { TextInputProps, TextInputStylesNames } from '../TextInput';\nimport { Input } from '../Input';\nimport { PasswordToggleIcon } from './PasswordToggleIcon';\nimport useStyles from './PasswordInput.styles';\n\nexport type PasswordInputStylesNames = Selectors<typeof useStyles> | TextInputStylesNames;\n\nexport interface PasswordInputProps\n  extends DefaultProps<PasswordInputStylesNames>,\n    Omit<TextInputProps, 'classNames' | 'styles'> {\n  /** Toggle button tabIndex, set to 0 to make button focusable with tab key */\n  toggleTabIndex?: -1 | 0;\n\n  /** Provide your own visibility toggle icon */\n  visibilityToggleIcon?: React.FC<{ reveal: boolean; size: number }>;\n\n  /** aria-label for visibility toggle button */\n  visibilityToggleLabel?: string;\n}\n\nconst buttonSizes = {\n  xs: 22,\n  sm: 28,\n  md: 26,\n  lg: 32,\n  xl: 40,\n};\n\nconst iconSizes = {\n  xs: 12,\n  sm: 15,\n  md: 17,\n  lg: 19,\n  xl: 21,\n};\n\nconst rightSectionSizes = {\n  xs: 28,\n  sm: 34,\n  md: 34,\n  lg: 44,\n  xl: 54,\n};\n\nconst defaultProps: Partial<PasswordInputProps> = {\n  size: 'sm',\n  toggleTabIndex: -1,\n  visibilityToggleIcon: PasswordToggleIcon,\n  __staticSelector: 'PasswordInput',\n};\n\nexport const PasswordInput = forwardRef<HTMLInputElement, PasswordInputProps>((props, ref) => {\n  const {\n    radius,\n    disabled,\n    size,\n    toggleTabIndex,\n    className,\n    id,\n    label,\n    error,\n    required,\n    style,\n    icon,\n    description,\n    wrapperProps,\n    classNames,\n    styles,\n    variant,\n    visibilityToggleIcon: VisibilityToggleIcon,\n    __staticSelector,\n    rightSection: _rightSection,\n    rightSectionWidth: _rightSectionWidth,\n    rightSectionProps: _rightSectionProps,\n    sx,\n    labelProps,\n    descriptionProps,\n    errorProps,\n    unstyled,\n    visibilityToggleLabel,\n    ...others\n  } = useComponentDefaultProps('PasswordInput', defaultProps, props);\n\n  const theme = useMantineTheme();\n  const rightSectionWidth = theme.fn.size({ size, sizes: rightSectionSizes });\n  const { classes, cx } = useStyles(\n    { size, rightSectionWidth },\n    { name: 'PasswordInput', classNames, styles, unstyled }\n  );\n  const uuid = useId(id);\n  const { systemStyles, rest } = extractSystemStyles(others);\n  const [reveal, { toggle }] = useDisclosure(false);\n\n  const rightSection = (\n    <ActionIcon<'button'>\n      className={classes.visibilityToggle}\n      tabIndex={toggleTabIndex}\n      radius={radius}\n      size={theme.fn.size({ size, sizes: buttonSizes })}\n      aria-hidden={!visibilityToggleLabel}\n      aria-label={visibilityToggleLabel}\n      unstyled={unstyled}\n      onMouseDown={(event) => {\n        event.preventDefault();\n        toggle();\n      }}\n      onKeyDown={(event) => {\n        if (event.key === ' ') {\n          event.preventDefault();\n          toggle();\n        }\n      }}\n    >\n      <VisibilityToggleIcon reveal={reveal} size={theme.fn.size({ size, sizes: iconSizes })} />\n    </ActionIcon>\n  );\n\n  return (\n    <Input.Wrapper\n      required={required}\n      id={uuid}\n      label={label}\n      error={error}\n      description={description}\n      size={size}\n      className={className}\n      style={style}\n      classNames={classNames}\n      styles={styles}\n      __staticSelector={__staticSelector}\n      sx={sx}\n      errorProps={errorProps}\n      descriptionProps={descriptionProps}\n      labelProps={labelProps}\n      unstyled={unstyled}\n      {...systemStyles}\n      {...wrapperProps}\n    >\n      <Input<'div'>\n        component=\"div\"\n        invalid={!!error}\n        icon={icon}\n        size={size}\n        classNames={{ ...classNames, input: classes.input }}\n        styles={styles}\n        radius={radius}\n        disabled={disabled}\n        __staticSelector={__staticSelector}\n        rightSectionWidth={rightSectionWidth}\n        rightSection={!disabled && rightSection}\n        variant={variant}\n        unstyled={unstyled}\n      >\n        <input\n          type={reveal ? 'text' : 'password'}\n          required={required}\n          className={cx(classes.innerInput, {\n            [classes.withIcon]: icon,\n            [classes.invalid]: !!error,\n          })}\n          disabled={disabled}\n          id={uuid}\n          ref={ref}\n          {...rest}\n        />\n      </Input>\n    </Input.Wrapper>\n  );\n});\n\nPasswordInput.displayName = '@mantine/core/PasswordInput';\n"]},"metadata":{},"sourceType":"module"}